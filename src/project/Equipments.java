/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;

import java.sql.*;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.awt.HeadlessException;
//import java.text.DateFormat;
import java.text.ParseException;
//import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Stack;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author PepperBurst
 */
public class Equipments extends javax.swing.JFrame {

PreparedStatement SQLStatement = null;
ResultSet queryResultSet = null;
Connection con = null;
String current_student = "";
String current_admin = "";
String selected_student;
int equip_row;
String equip_row_code;
    /**
     * Creates new form Equipments
     */
    public Equipments() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Main = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        Login1 = new javax.swing.JPanel();
        btn_student = new javax.swing.JButton();
        btn_administrator = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btn_exit = new javax.swing.JButton();
        adminLogin = new javax.swing.JPanel();
        adminLogin1 = new javax.swing.JPanel();
        txt_adminPass = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btn_adminLogin = new javax.swing.JButton();
        btn_adminBack = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_adminID = new javax.swing.JTextField();
        adminAction = new javax.swing.JPanel();
        adminAction1 = new javax.swing.JPanel();
        btn_adminLogout = new javax.swing.JButton();
        btn_adminSwitchAccount = new javax.swing.JButton();
        btn_addEquipment = new javax.swing.JButton();
        btn_adminViewAllEquip = new javax.swing.JButton();
        btn_viewRequests = new javax.swing.JButton();
        btn_adminReturn = new javax.swing.JButton();
        btn_adminActionP2 = new javax.swing.JButton();
        adminActionP2 = new javax.swing.JPanel();
        adminActionP21 = new javax.swing.JPanel();
        btn_adminHistory = new javax.swing.JButton();
        btn_adminActionP1 = new javax.swing.JButton();
        btn_adminLogoutP2 = new javax.swing.JButton();
        btn_adminSwitchAccountP2 = new javax.swing.JButton();
        btn_viewAdminInfo = new javax.swing.JButton();
        btn_adminViewAllStudent = new javax.swing.JButton();
        btn_viewLoginHistory = new javax.swing.JButton();
        adminViewStudentList = new javax.swing.JPanel();
        adminViewStudentList1 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_adminViewStudentList = new javax.swing.JTable();
        btn_adminViewStudentListBack = new javax.swing.JButton();
        btn_adminViewStudentDetails = new javax.swing.JButton();
        adminStudentDetails = new javax.swing.JPanel();
        adminStudentDetails1 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        lbl_firstN = new javax.swing.JLabel();
        lbl_middleN = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lbl_lastN = new javax.swing.JLabel();
        btn_studentDetailsBack = new javax.swing.JButton();
        btn_studentDetailsNext = new javax.swing.JButton();
        btn_adminStudentDetailsPrevious = new javax.swing.JButton();
        adminStudentDetails2 = new javax.swing.JPanel();
        adminStudentDetails21 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        lbl_SID = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        lbl_course = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        lbl_yLVL = new javax.swing.JLabel();
        btn_adminStudentDetails2Back = new javax.swing.JButton();
        btn_adminStudentDetails2Previous = new javax.swing.JButton();
        btn_adminStudentDetails2Next = new javax.swing.JButton();
        adminStudentDetails3 = new javax.swing.JPanel();
        adminStudentDetails31 = new javax.swing.JPanel();
        btn_adminStudentDetails3Back = new javax.swing.JButton();
        btn_adminStudentDetails3Previous = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        lbl_statR = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        lbl_statQ = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        lbl_pin = new javax.swing.JLabel();
        btn_adminStudentDetails3Next = new javax.swing.JButton();
        btn_updateStudent3 = new javax.swing.JButton();
        adminStudentStatus = new javax.swing.JPanel();
        adminStudentStatus1 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txt_returnIn = new javax.swing.JTextField();
        txt_queueIn = new javax.swing.JTextField();
        btn_adminStudentStatusBack = new javax.swing.JButton();
        lbl_statusID = new javax.swing.JLabel();
        btn_updateStatus = new javax.swing.JButton();
        adminAddEquip = new javax.swing.JPanel();
        adminAddEquip1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_addCode = new javax.swing.JTextField();
        txt_addName = new javax.swing.JTextField();
        txt_addManu = new javax.swing.JTextField();
        txt_addShelf = new javax.swing.JTextField();
        btn_insertEquipment = new javax.swing.JButton();
        btn_adminAddEquipBack = new javax.swing.JButton();
        adminViewAllEquip = new javax.swing.JPanel();
        adminViewAllEquip1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_adminViewAllEquip = new javax.swing.JTable();
        btn_adminViewAllEquipBack = new javax.swing.JButton();
        btn_editEquipInfo = new javax.swing.JButton();
        adminEditEquip = new javax.swing.JPanel();
        adminEditEquip1 = new javax.swing.JPanel();
        btn_adminEditEquipBack = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        cmb_returnStatus = new javax.swing.JComboBox<>();
        txt_adminEditCode = new javax.swing.JTextField();
        txt_adminEditName = new javax.swing.JTextField();
        txt_adminEditManu = new javax.swing.JTextField();
        txt_adminEditShelf = new javax.swing.JTextField();
        btn_updateEquipInfo = new javax.swing.JButton();
        cmb_queueStatus = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        adminViewRequest = new javax.swing.JPanel();
        adminViewRequest1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_adminRequest = new javax.swing.JTable();
        btn_adminViewRequestBack = new javax.swing.JButton();
        btn_adminViewStudentRequest = new javax.swing.JButton();
        adminProcessRequest = new javax.swing.JPanel();
        adminProcessRequest1 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_adminProcessRequest = new javax.swing.JTable();
        btn_adminProcessRequestBack = new javax.swing.JButton();
        btn_approveRequest = new javax.swing.JButton();
        btn_rejectRequest = new javax.swing.JButton();
        adminHistory = new javax.swing.JPanel();
        adminHistory1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_history = new javax.swing.JTable();
        btn_adminHistoryBack = new javax.swing.JButton();
        adminLoginHistory = new javax.swing.JPanel();
        adminLoginHistory1 = new javax.swing.JPanel();
        btn_studentLoginHistory = new javax.swing.JButton();
        btn_adminLoginHistory = new javax.swing.JButton();
        btn_adminLoginHistoryBack = new javax.swing.JButton();
        adminViewAdminHistory = new javax.swing.JPanel();
        adminViewAdminHistory1 = new javax.swing.JPanel();
        btn_adminViewAdminHistoryBack = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl_adminLoginHistory = new javax.swing.JTable();
        adminViewStudentHistory = new javax.swing.JPanel();
        adminViewStudentHistory1 = new javax.swing.JPanel();
        btn_adminViewStudentHistoryBack = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbl_studentLoginHistory = new javax.swing.JTable();
        adminReturn = new javax.swing.JPanel();
        adminReturn1 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txt_returnCode = new javax.swing.JTextField();
        btn_adminReturnBack = new javax.swing.JButton();
        btn_returnEquip = new javax.swing.JButton();
        studentLogin = new javax.swing.JPanel();
        studentLogin1 = new javax.swing.JPanel();
        lbl_studentID = new javax.swing.JLabel();
        txt_studentID = new javax.swing.JTextField();
        btn_enterStudentID = new javax.swing.JButton();
        btn_studentBack = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txt_studentPass = new javax.swing.JTextField();
        studentAction = new javax.swing.JPanel();
        studentAction1 = new javax.swing.JPanel();
        btn_studentSwitchAccount = new javax.swing.JButton();
        btn_studentLogout = new javax.swing.JButton();
        btn_borrow = new javax.swing.JButton();
        btn_viewStudentInfo = new javax.swing.JButton();
        btn_studentViewQueue = new javax.swing.JButton();
        btn_requestCancel = new javax.swing.JButton();
        studentLendA = new javax.swing.JPanel();
        studentLendA1 = new javax.swing.JPanel();
        btn_studentLendABack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        spn_mm = new javax.swing.JSpinner();
        spn_psu = new javax.swing.JSpinner();
        spn_sigGen = new javax.swing.JSpinner();
        spn_osci = new javax.swing.JSpinner();
        spn_clip = new javax.swing.JSpinner();
        cmb_mm = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        btn_borrowEquip = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmb_sigGen = new javax.swing.JComboBox<>();
        studentView = new javax.swing.JPanel();
        studentView1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_studentQueue = new javax.swing.JTable();
        btn_studentViewBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        Main.setLayout(new java.awt.CardLayout());

        Login1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_student.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        btn_student.setText("Student");
        btn_student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentActionPerformed(evt);
            }
        });

        btn_administrator.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        btn_administrator.setText("Administrator");
        btn_administrator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_administratorActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Laboratory Equipment Inventory");

        btn_exit.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        btn_exit.setText("Exit");
        btn_exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Login1Layout = new javax.swing.GroupLayout(Login1);
        Login1.setLayout(Login1Layout);
        Login1Layout.setHorizontalGroup(
            Login1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Login1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Login1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_student, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_administrator, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        Login1Layout.setVerticalGroup(
            Login1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Login1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(btn_student)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_administrator)
                .addGap(31, 31, 31)
                .addComponent(btn_exit)
                .addContainerGap())
        );

        javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
        Login.setLayout(LoginLayout);
        LoginLayout.setHorizontalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Login1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        LoginLayout.setVerticalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Login1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(Login, "card2");

        adminLogin1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_adminPass.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Enter Password:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btn_adminLogin.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminLogin.setText("Login");
        btn_adminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminLoginActionPerformed(evt);
            }
        });

        btn_adminBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminBack.setText("Back");
        btn_adminBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminBackActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Enter Administrator ID:");

        txt_adminID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_adminID.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_adminIDMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout adminLogin1Layout = new javax.swing.GroupLayout(adminLogin1);
        adminLogin1.setLayout(adminLogin1Layout);
        adminLogin1Layout.setHorizontalGroup(
            adminLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLogin1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_adminID)
                    .addComponent(txt_adminPass, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(adminLogin1Layout.createSequentialGroup()
                        .addGroup(adminLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(0, 442, Short.MAX_VALUE))
                    .addGroup(adminLogin1Layout.createSequentialGroup()
                        .addComponent(btn_adminLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminBack)))
                .addContainerGap())
        );
        adminLogin1Layout.setVerticalGroup(
            adminLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLogin1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_adminID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_adminPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(adminLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminLogin)
                    .addComponent(btn_adminBack))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminLoginLayout = new javax.swing.GroupLayout(adminLogin);
        adminLogin.setLayout(adminLoginLayout);
        adminLoginLayout.setHorizontalGroup(
            adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminLogin1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminLoginLayout.setVerticalGroup(
            adminLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminLogin1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminLogin, "card3");

        adminAction1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_adminLogout.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminLogout.setText("Logout");
        btn_adminLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminLogoutActionPerformed(evt);
            }
        });

        btn_adminSwitchAccount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminSwitchAccount.setText("Switch Account");
        btn_adminSwitchAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminSwitchAccountActionPerformed(evt);
            }
        });

        btn_addEquipment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_addEquipment.setText("Add Equipment");
        btn_addEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addEquipmentActionPerformed(evt);
            }
        });

        btn_adminViewAllEquip.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewAllEquip.setText("View All Equipment");
        btn_adminViewAllEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewAllEquipActionPerformed(evt);
            }
        });

        btn_viewRequests.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_viewRequests.setText("View Requests");
        btn_viewRequests.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewRequestsActionPerformed(evt);
            }
        });

        btn_adminReturn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminReturn.setText("Return Equipment");
        btn_adminReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminReturnActionPerformed(evt);
            }
        });

        btn_adminActionP2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminActionP2.setText(">>");
        btn_adminActionP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminActionP2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminAction1Layout = new javax.swing.GroupLayout(adminAction1);
        adminAction1.setLayout(adminAction1Layout);
        adminAction1Layout.setHorizontalGroup(
            adminAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminAction1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_adminActionP2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_addEquipment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(adminAction1Layout.createSequentialGroup()
                        .addComponent(btn_adminSwitchAccount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_adminLogout))
                    .addComponent(btn_adminViewAllEquip, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addComponent(btn_viewRequests, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_adminReturn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminAction1Layout.setVerticalGroup(
            adminAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminAction1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_addEquipment)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminViewAllEquip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_viewRequests)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminReturn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btn_adminActionP2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminLogout)
                    .addComponent(btn_adminSwitchAccount))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminActionLayout = new javax.swing.GroupLayout(adminAction);
        adminAction.setLayout(adminActionLayout);
        adminActionLayout.setHorizontalGroup(
            adminActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminAction1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminActionLayout.setVerticalGroup(
            adminActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminAction1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminAction, "card5");

        adminActionP21.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_adminHistory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminHistory.setText("View Lend History");
        btn_adminHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminHistoryActionPerformed(evt);
            }
        });

        btn_adminActionP1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminActionP1.setText("<<");
        btn_adminActionP1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminActionP1ActionPerformed(evt);
            }
        });

        btn_adminLogoutP2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminLogoutP2.setText("Logout");
        btn_adminLogoutP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminLogoutP2ActionPerformed(evt);
            }
        });

        btn_adminSwitchAccountP2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminSwitchAccountP2.setText("Switch Account");
        btn_adminSwitchAccountP2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminSwitchAccountP2ActionPerformed(evt);
            }
        });

        btn_viewAdminInfo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_viewAdminInfo.setText("View Admin Information");
        btn_viewAdminInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewAdminInfoActionPerformed(evt);
            }
        });

        btn_adminViewAllStudent.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewAllStudent.setText("View Student List");
        btn_adminViewAllStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewAllStudentActionPerformed(evt);
            }
        });

        btn_viewLoginHistory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_viewLoginHistory.setText("View Login History");
        btn_viewLoginHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewLoginHistoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminActionP21Layout = new javax.swing.GroupLayout(adminActionP21);
        adminActionP21.setLayout(adminActionP21Layout);
        adminActionP21Layout.setHorizontalGroup(
            adminActionP21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminActionP21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminActionP21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_adminViewAllStudent, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_adminActionP1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_adminHistory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminActionP21Layout.createSequentialGroup()
                        .addComponent(btn_adminSwitchAccountP2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_adminLogoutP2))
                    .addComponent(btn_viewAdminInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addComponent(btn_viewLoginHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminActionP21Layout.setVerticalGroup(
            adminActionP21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminActionP21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_adminHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_viewAdminInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminViewAllStudent)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_viewLoginHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(btn_adminActionP1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminActionP21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminLogoutP2)
                    .addComponent(btn_adminSwitchAccountP2))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminActionP2Layout = new javax.swing.GroupLayout(adminActionP2);
        adminActionP2.setLayout(adminActionP2Layout);
        adminActionP2Layout.setHorizontalGroup(
            adminActionP2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminActionP2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminActionP21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminActionP2Layout.setVerticalGroup(
            adminActionP2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminActionP2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminActionP21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminActionP2, "card16");

        adminViewStudentList1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_adminViewStudentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Student_ID", "Queue Status", "Return Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_adminViewStudentList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_adminViewStudentListMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_adminViewStudentList);

        btn_adminViewStudentListBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewStudentListBack.setText("Back");
        btn_adminViewStudentListBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewStudentListBackActionPerformed(evt);
            }
        });

        btn_adminViewStudentDetails.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewStudentDetails.setText("View Student Details");
        btn_adminViewStudentDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewStudentDetailsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminViewStudentList1Layout = new javax.swing.GroupLayout(adminViewStudentList1);
        adminViewStudentList1.setLayout(adminViewStudentList1Layout);
        adminViewStudentList1Layout.setHorizontalGroup(
            adminViewStudentList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentList1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminViewStudentList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addGroup(adminViewStudentList1Layout.createSequentialGroup()
                        .addComponent(btn_adminViewStudentDetails)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_adminViewStudentListBack)))
                .addContainerGap())
        );
        adminViewStudentList1Layout.setVerticalGroup(
            adminViewStudentList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentList1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminViewStudentList1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminViewStudentListBack)
                    .addComponent(btn_adminViewStudentDetails))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminViewStudentListLayout = new javax.swing.GroupLayout(adminViewStudentList);
        adminViewStudentList.setLayout(adminViewStudentListLayout);
        adminViewStudentListLayout.setHorizontalGroup(
            adminViewStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewStudentList1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminViewStudentListLayout.setVerticalGroup(
            adminViewStudentListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentListLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewStudentList1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminViewStudentList, "card17");

        adminStudentDetails1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel23.setText("First Name:");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel24.setText("Middle Name:");
        jLabel24.setToolTipText("");

        lbl_firstN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_firstN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_firstN.setText("N/A");

        lbl_middleN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_middleN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_middleN.setText("N/A");

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel25.setText("Last Name:");

        lbl_lastN.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_lastN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_lastN.setText("N/A");

        btn_studentDetailsBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentDetailsBack.setText("Back");
        btn_studentDetailsBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentDetailsBackActionPerformed(evt);
            }
        });

        btn_studentDetailsNext.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentDetailsNext.setText(">>");
        btn_studentDetailsNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentDetailsNextActionPerformed(evt);
            }
        });

        btn_adminStudentDetailsPrevious.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetailsPrevious.setText("<<");
        btn_adminStudentDetailsPrevious.setEnabled(false);

        javax.swing.GroupLayout adminStudentDetails1Layout = new javax.swing.GroupLayout(adminStudentDetails1);
        adminStudentDetails1.setLayout(adminStudentDetails1Layout);
        adminStudentDetails1Layout.setHorizontalGroup(
            adminStudentDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminStudentDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_firstN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_middleN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(adminStudentDetails1Layout.createSequentialGroup()
                        .addGroup(adminStudentDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbl_lastN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminStudentDetails1Layout.createSequentialGroup()
                        .addComponent(btn_adminStudentDetailsPrevious)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_studentDetailsNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
                        .addComponent(btn_studentDetailsBack)))
                .addContainerGap())
        );
        adminStudentDetails1Layout.setVerticalGroup(
            adminStudentDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_firstN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_middleN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_lastN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(adminStudentDetails1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_studentDetailsBack)
                    .addComponent(btn_studentDetailsNext)
                    .addComponent(btn_adminStudentDetailsPrevious))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminStudentDetailsLayout = new javax.swing.GroupLayout(adminStudentDetails);
        adminStudentDetails.setLayout(adminStudentDetailsLayout);
        adminStudentDetailsLayout.setHorizontalGroup(
            adminStudentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminStudentDetailsLayout.setVerticalGroup(
            adminStudentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentDetails1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminStudentDetails, "card18");

        adminStudentDetails21.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel26.setText("Student ID:");

        lbl_SID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_SID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_SID.setText("N/A");

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel27.setText("Course:");

        lbl_course.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_course.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_course.setText("N/A");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel28.setText("Year Level:");

        lbl_yLVL.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_yLVL.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_yLVL.setText("N/A");

        btn_adminStudentDetails2Back.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetails2Back.setText("Back");
        btn_adminStudentDetails2Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminStudentDetails2BackActionPerformed(evt);
            }
        });

        btn_adminStudentDetails2Previous.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetails2Previous.setText("<<");
        btn_adminStudentDetails2Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminStudentDetails2PreviousActionPerformed(evt);
            }
        });

        btn_adminStudentDetails2Next.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetails2Next.setText(">>");
        btn_adminStudentDetails2Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminStudentDetails2NextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminStudentDetails21Layout = new javax.swing.GroupLayout(adminStudentDetails21);
        adminStudentDetails21.setLayout(adminStudentDetails21Layout);
        adminStudentDetails21Layout.setHorizontalGroup(
            adminStudentDetails21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminStudentDetails21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_SID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_course, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(adminStudentDetails21Layout.createSequentialGroup()
                        .addGroup(adminStudentDetails21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbl_yLVL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminStudentDetails21Layout.createSequentialGroup()
                        .addComponent(btn_adminStudentDetails2Previous)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminStudentDetails2Next)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 465, Short.MAX_VALUE)
                        .addComponent(btn_adminStudentDetails2Back)))
                .addContainerGap())
        );
        adminStudentDetails21Layout.setVerticalGroup(
            adminStudentDetails21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_SID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_course)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_yLVL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(adminStudentDetails21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminStudentDetails2Back)
                    .addComponent(btn_adminStudentDetails2Previous)
                    .addComponent(btn_adminStudentDetails2Next))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminStudentDetails2Layout = new javax.swing.GroupLayout(adminStudentDetails2);
        adminStudentDetails2.setLayout(adminStudentDetails2Layout);
        adminStudentDetails2Layout.setHorizontalGroup(
            adminStudentDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentDetails21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminStudentDetails2Layout.setVerticalGroup(
            adminStudentDetails2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentDetails21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminStudentDetails2, "card19");

        adminStudentDetails31.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_adminStudentDetails3Back.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetails3Back.setText("Back");
        btn_adminStudentDetails3Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminStudentDetails3BackActionPerformed(evt);
            }
        });

        btn_adminStudentDetails3Previous.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetails3Previous.setText("<<");
        btn_adminStudentDetails3Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminStudentDetails3PreviousActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("Return Status:");

        lbl_statR.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_statR.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_statR.setText("N/A");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel31.setText("Queue Status:");

        lbl_statQ.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_statQ.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_statQ.setText("N/A");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel30.setText("Pin Password:");

        lbl_pin.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_pin.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lbl_pin.setText("N/A");

        btn_adminStudentDetails3Next.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentDetails3Next.setText(">>");
        btn_adminStudentDetails3Next.setEnabled(false);

        btn_updateStudent3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_updateStudent3.setText("Update");
        btn_updateStudent3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateStudent3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminStudentDetails31Layout = new javax.swing.GroupLayout(adminStudentDetails31);
        adminStudentDetails31.setLayout(adminStudentDetails31Layout);
        adminStudentDetails31Layout.setHorizontalGroup(
            adminStudentDetails31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminStudentDetails31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_pin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminStudentDetails31Layout.createSequentialGroup()
                        .addComponent(btn_adminStudentDetails3Previous)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminStudentDetails3Next)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 350, Short.MAX_VALUE)
                        .addComponent(btn_updateStudent3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminStudentDetails3Back))
                    .addComponent(lbl_statR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_statQ, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(adminStudentDetails31Layout.createSequentialGroup()
                        .addGroup(adminStudentDetails31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel31)
                            .addComponent(jLabel30))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        adminStudentDetails31Layout.setVerticalGroup(
            adminStudentDetails31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminStudentDetails31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_statR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_statQ)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_pin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(adminStudentDetails31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminStudentDetails3Back)
                    .addComponent(btn_adminStudentDetails3Previous)
                    .addComponent(btn_adminStudentDetails3Next)
                    .addComponent(btn_updateStudent3))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminStudentDetails3Layout = new javax.swing.GroupLayout(adminStudentDetails3);
        adminStudentDetails3.setLayout(adminStudentDetails3Layout);
        adminStudentDetails3Layout.setHorizontalGroup(
            adminStudentDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentDetails31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminStudentDetails3Layout.setVerticalGroup(
            adminStudentDetails3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentDetails3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentDetails31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminStudentDetails3, "card20");

        adminStudentStatus1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel32.setText("Student ID:");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel33.setText("Queue Status:");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel34.setText("Return Status:");

        txt_returnIn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txt_queueIn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btn_adminStudentStatusBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminStudentStatusBack.setText("Back");
        btn_adminStudentStatusBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminStudentStatusBackActionPerformed(evt);
            }
        });

        lbl_statusID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_statusID.setText("N/A");

        btn_updateStatus.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_updateStatus.setText("Update");
        btn_updateStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminStudentStatus1Layout = new javax.swing.GroupLayout(adminStudentStatus1);
        adminStudentStatus1.setLayout(adminStudentStatus1Layout);
        adminStudentStatus1Layout.setHorizontalGroup(
            adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentStatus1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminStudentStatus1Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_queueIn, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE))
                    .addGroup(adminStudentStatus1Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_statusID))
                    .addGroup(adminStudentStatus1Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addGap(2, 2, 2)
                        .addComponent(txt_returnIn))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminStudentStatus1Layout.createSequentialGroup()
                        .addComponent(btn_updateStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_adminStudentStatusBack)))
                .addContainerGap())
        );
        adminStudentStatus1Layout.setVerticalGroup(
            adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentStatus1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(lbl_statusID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txt_queueIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txt_returnIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addGroup(adminStudentStatus1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminStudentStatusBack)
                    .addComponent(btn_updateStatus))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminStudentStatusLayout = new javax.swing.GroupLayout(adminStudentStatus);
        adminStudentStatus.setLayout(adminStudentStatusLayout);
        adminStudentStatusLayout.setHorizontalGroup(
            adminStudentStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentStatus1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminStudentStatusLayout.setVerticalGroup(
            adminStudentStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminStudentStatusLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminStudentStatus1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminStudentStatus, "card24");

        adminAddEquip1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("Code:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("Name:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Manufacturer:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setText("Shelf Location:");

        txt_addCode.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txt_addName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txt_addManu.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txt_addShelf.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btn_insertEquipment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_insertEquipment.setText("Add Equipment");
        btn_insertEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertEquipmentActionPerformed(evt);
            }
        });

        btn_adminAddEquipBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminAddEquipBack.setText("Back");
        btn_adminAddEquipBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminAddEquipBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminAddEquip1Layout = new javax.swing.GroupLayout(adminAddEquip1);
        adminAddEquip1.setLayout(adminAddEquip1Layout);
        adminAddEquip1Layout.setHorizontalGroup(
            adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddEquip1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminAddEquip1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_addName))
                    .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(adminAddEquip1Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_addCode))
                        .addGroup(adminAddEquip1Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_addShelf, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                        .addGroup(adminAddEquip1Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txt_addManu)))
                    .addGroup(adminAddEquip1Layout.createSequentialGroup()
                        .addComponent(btn_insertEquipment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminAddEquipBack, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        adminAddEquip1Layout.setVerticalGroup(
            adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddEquip1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txt_addCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txt_addName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_addManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txt_addShelf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(adminAddEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_insertEquipment)
                    .addComponent(btn_adminAddEquipBack))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminAddEquipLayout = new javax.swing.GroupLayout(adminAddEquip);
        adminAddEquip.setLayout(adminAddEquipLayout);
        adminAddEquipLayout.setHorizontalGroup(
            adminAddEquipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddEquipLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminAddEquip1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminAddEquipLayout.setVerticalGroup(
            adminAddEquipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminAddEquipLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminAddEquip1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminAddEquip, "card9");

        adminViewAllEquip1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_adminViewAllEquip.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Name", "Manufacturer", "Shelf Location", "Returned", "Requested"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_adminViewAllEquip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_adminViewAllEquipMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_adminViewAllEquip);

        btn_adminViewAllEquipBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewAllEquipBack.setText("Back");
        btn_adminViewAllEquipBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewAllEquipBackActionPerformed(evt);
            }
        });

        btn_editEquipInfo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_editEquipInfo.setText("Edit Information");
        btn_editEquipInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editEquipInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminViewAllEquip1Layout = new javax.swing.GroupLayout(adminViewAllEquip1);
        adminViewAllEquip1.setLayout(adminViewAllEquip1Layout);
        adminViewAllEquip1Layout.setHorizontalGroup(
            adminViewAllEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAllEquip1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminViewAllEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(adminViewAllEquip1Layout.createSequentialGroup()
                        .addComponent(btn_editEquipInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminViewAllEquipBack, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)))
                .addContainerGap())
        );
        adminViewAllEquip1Layout.setVerticalGroup(
            adminViewAllEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAllEquip1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminViewAllEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminViewAllEquipBack)
                    .addComponent(btn_editEquipInfo))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminViewAllEquipLayout = new javax.swing.GroupLayout(adminViewAllEquip);
        adminViewAllEquip.setLayout(adminViewAllEquipLayout);
        adminViewAllEquipLayout.setHorizontalGroup(
            adminViewAllEquipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAllEquipLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewAllEquip1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminViewAllEquipLayout.setVerticalGroup(
            adminViewAllEquipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAllEquipLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewAllEquip1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminViewAllEquip, "card10");

        adminEditEquip1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_adminEditEquipBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminEditEquipBack.setText("Back");
        btn_adminEditEquipBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminEditEquipBackActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel17.setText("Code:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel18.setText("Name:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel19.setText("Manufacturer:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel20.setText("Shelf Location:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel21.setText("Return Status:");

        cmb_returnStatus.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmb_returnStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "returned", "not returned" }));

        txt_adminEditCode.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txt_adminEditName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txt_adminEditManu.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_adminEditManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_adminEditManuActionPerformed(evt);
            }
        });

        txt_adminEditShelf.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btn_updateEquipInfo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_updateEquipInfo.setText("Edit Equipment Info");
        btn_updateEquipInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateEquipInfoActionPerformed(evt);
            }
        });

        cmb_queueStatus.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cmb_queueStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "no", "requested" }));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel35.setText("Queue Status");

        javax.swing.GroupLayout adminEditEquip1Layout = new javax.swing.GroupLayout(adminEditEquip1);
        adminEditEquip1.setLayout(adminEditEquip1Layout);
        adminEditEquip1Layout.setHorizontalGroup(
            adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminEditEquip1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminEditEquip1Layout.createSequentialGroup()
                        .addComponent(btn_updateEquipInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, Short.MAX_VALUE)
                        .addComponent(btn_adminEditEquipBack))
                    .addGroup(adminEditEquip1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_adminEditCode))
                    .addGroup(adminEditEquip1Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_adminEditName))
                    .addGroup(adminEditEquip1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_adminEditManu))
                    .addGroup(adminEditEquip1Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_adminEditShelf))
                    .addGroup(adminEditEquip1Layout.createSequentialGroup()
                        .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel35))
                        .addGap(7, 7, 7)
                        .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmb_queueStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmb_returnStatus, 0, 528, Short.MAX_VALUE))))
                .addContainerGap())
        );
        adminEditEquip1Layout.setVerticalGroup(
            adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminEditEquip1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(txt_adminEditCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(txt_adminEditName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txt_adminEditManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txt_adminEditShelf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(cmb_returnStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(cmb_queueStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(adminEditEquip1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminEditEquipBack)
                    .addComponent(btn_updateEquipInfo))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminEditEquipLayout = new javax.swing.GroupLayout(adminEditEquip);
        adminEditEquip.setLayout(adminEditEquipLayout);
        adminEditEquipLayout.setHorizontalGroup(
            adminEditEquipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminEditEquipLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminEditEquip1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminEditEquipLayout.setVerticalGroup(
            adminEditEquipLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminEditEquipLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminEditEquip1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminEditEquip, "card11");

        adminViewRequest1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_adminRequest.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbl_adminRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Student ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_adminRequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_adminRequestMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_adminRequest);

        btn_adminViewRequestBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewRequestBack.setText("Back");
        btn_adminViewRequestBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewRequestBackActionPerformed(evt);
            }
        });

        btn_adminViewStudentRequest.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewStudentRequest.setText("View Request");
        btn_adminViewStudentRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewStudentRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminViewRequest1Layout = new javax.swing.GroupLayout(adminViewRequest1);
        adminViewRequest1.setLayout(adminViewRequest1Layout);
        adminViewRequest1Layout.setHorizontalGroup(
            adminViewRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewRequest1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminViewRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addGroup(adminViewRequest1Layout.createSequentialGroup()
                        .addComponent(btn_adminViewStudentRequest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminViewRequestBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        adminViewRequest1Layout.setVerticalGroup(
            adminViewRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewRequest1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(adminViewRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminViewRequestBack)
                    .addComponent(btn_adminViewStudentRequest))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminViewRequestLayout = new javax.swing.GroupLayout(adminViewRequest);
        adminViewRequest.setLayout(adminViewRequestLayout);
        adminViewRequestLayout.setHorizontalGroup(
            adminViewRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewRequest1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminViewRequestLayout.setVerticalGroup(
            adminViewRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewRequest1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminViewRequest, "card12");

        adminProcessRequest1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        adminProcessRequest1.setEnabled(false);

        tbl_adminProcessRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Code", "Name", "Shelf Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_adminProcessRequest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_adminProcessRequestMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_adminProcessRequest);

        btn_adminProcessRequestBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminProcessRequestBack.setText("Back");
        btn_adminProcessRequestBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminProcessRequestBackActionPerformed(evt);
            }
        });

        btn_approveRequest.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_approveRequest.setText("Approve");
        btn_approveRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_approveRequestActionPerformed(evt);
            }
        });

        btn_rejectRequest.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_rejectRequest.setText("Reject");
        btn_rejectRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rejectRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminProcessRequest1Layout = new javax.swing.GroupLayout(adminProcessRequest1);
        adminProcessRequest1.setLayout(adminProcessRequest1Layout);
        adminProcessRequest1Layout.setHorizontalGroup(
            adminProcessRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminProcessRequest1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminProcessRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminProcessRequest1Layout.createSequentialGroup()
                        .addComponent(btn_approveRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_rejectRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_adminProcessRequestBack)))
                .addContainerGap())
        );
        adminProcessRequest1Layout.setVerticalGroup(
            adminProcessRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminProcessRequest1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(adminProcessRequest1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminProcessRequestBack)
                    .addComponent(btn_approveRequest)
                    .addComponent(btn_rejectRequest))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminProcessRequestLayout = new javax.swing.GroupLayout(adminProcessRequest);
        adminProcessRequest.setLayout(adminProcessRequestLayout);
        adminProcessRequestLayout.setHorizontalGroup(
            adminProcessRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminProcessRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminProcessRequest1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminProcessRequestLayout.setVerticalGroup(
            adminProcessRequestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminProcessRequestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminProcessRequest1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminProcessRequest, "card13");

        adminHistory1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_history.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Code", "Student ID", "Lend Date", "Return Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_history.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_historyMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_history);
        if (tbl_history.getColumnModel().getColumnCount() > 0) {
            tbl_history.getColumnModel().getColumn(0).setHeaderValue("#");
            tbl_history.getColumnModel().getColumn(3).setResizable(false);
            tbl_history.getColumnModel().getColumn(3).setHeaderValue("Return Date");
        }

        btn_adminHistoryBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminHistoryBack.setText("Back");
        btn_adminHistoryBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminHistoryBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminHistory1Layout = new javax.swing.GroupLayout(adminHistory1);
        adminHistory1.setLayout(adminHistory1Layout);
        adminHistory1Layout.setHorizontalGroup(
            adminHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addComponent(btn_adminHistoryBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminHistory1Layout.setVerticalGroup(
            adminHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminHistoryBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout adminHistoryLayout = new javax.swing.GroupLayout(adminHistory);
        adminHistory.setLayout(adminHistoryLayout);
        adminHistoryLayout.setHorizontalGroup(
            adminHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminHistoryLayout.setVerticalGroup(
            adminHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminHistory, "card15");

        adminLoginHistory1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_studentLoginHistory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentLoginHistory.setText("Student Login History");
        btn_studentLoginHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentLoginHistoryActionPerformed(evt);
            }
        });

        btn_adminLoginHistory.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminLoginHistory.setText("Admin Login History");
        btn_adminLoginHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminLoginHistoryActionPerformed(evt);
            }
        });

        btn_adminLoginHistoryBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminLoginHistoryBack.setText("Back");
        btn_adminLoginHistoryBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminLoginHistoryBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminLoginHistory1Layout = new javax.swing.GroupLayout(adminLoginHistory1);
        adminLoginHistory1.setLayout(adminLoginHistory1Layout);
        adminLoginHistory1Layout.setHorizontalGroup(
            adminLoginHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminLoginHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_studentLoginHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addComponent(btn_adminLoginHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_adminLoginHistoryBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminLoginHistory1Layout.setVerticalGroup(
            adminLoginHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_studentLoginHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminLoginHistory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 169, Short.MAX_VALUE)
                .addComponent(btn_adminLoginHistoryBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout adminLoginHistoryLayout = new javax.swing.GroupLayout(adminLoginHistory);
        adminLoginHistory.setLayout(adminLoginHistoryLayout);
        adminLoginHistoryLayout.setHorizontalGroup(
            adminLoginHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminLoginHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminLoginHistoryLayout.setVerticalGroup(
            adminLoginHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminLoginHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminLoginHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminLoginHistory, "card21");

        adminViewAdminHistory1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_adminViewAdminHistoryBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewAdminHistoryBack.setText("Back");
        btn_adminViewAdminHistoryBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewAdminHistoryBackActionPerformed(evt);
            }
        });

        tbl_adminLoginHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "admin_ID", "login_date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_adminLoginHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_adminLoginHistoryMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tbl_adminLoginHistory);

        javax.swing.GroupLayout adminViewAdminHistory1Layout = new javax.swing.GroupLayout(adminViewAdminHistory1);
        adminViewAdminHistory1.setLayout(adminViewAdminHistory1Layout);
        adminViewAdminHistory1Layout.setHorizontalGroup(
            adminViewAdminHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAdminHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminViewAdminHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_adminViewAdminHistoryBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminViewAdminHistory1Layout.setVerticalGroup(
            adminViewAdminHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminViewAdminHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminViewAdminHistoryBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout adminViewAdminHistoryLayout = new javax.swing.GroupLayout(adminViewAdminHistory);
        adminViewAdminHistory.setLayout(adminViewAdminHistoryLayout);
        adminViewAdminHistoryLayout.setHorizontalGroup(
            adminViewAdminHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAdminHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewAdminHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminViewAdminHistoryLayout.setVerticalGroup(
            adminViewAdminHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewAdminHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewAdminHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminViewAdminHistory, "card22");

        adminViewStudentHistory1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_adminViewStudentHistoryBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminViewStudentHistoryBack.setText("Back");
        btn_adminViewStudentHistoryBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminViewStudentHistoryBackActionPerformed(evt);
            }
        });

        tbl_studentLoginHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "student_ID", "login_date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_studentLoginHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_studentLoginHistoryMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbl_studentLoginHistory);

        javax.swing.GroupLayout adminViewStudentHistory1Layout = new javax.swing.GroupLayout(adminViewStudentHistory1);
        adminViewStudentHistory1.setLayout(adminViewStudentHistory1Layout);
        adminViewStudentHistory1Layout.setHorizontalGroup(
            adminViewStudentHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminViewStudentHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_adminViewStudentHistoryBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE))
                .addContainerGap())
        );
        adminViewStudentHistory1Layout.setVerticalGroup(
            adminViewStudentHistory1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminViewStudentHistory1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_adminViewStudentHistoryBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout adminViewStudentHistoryLayout = new javax.swing.GroupLayout(adminViewStudentHistory);
        adminViewStudentHistory.setLayout(adminViewStudentHistoryLayout);
        adminViewStudentHistoryLayout.setHorizontalGroup(
            adminViewStudentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewStudentHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminViewStudentHistoryLayout.setVerticalGroup(
            adminViewStudentHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminViewStudentHistoryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminViewStudentHistory1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminViewStudentHistory, "card23");

        adminReturn1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel22.setText("Equipment Code:");

        txt_returnCode.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txt_returnCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_returnCodeMouseClicked(evt);
            }
        });

        btn_adminReturnBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_adminReturnBack.setText("Back");
        btn_adminReturnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_adminReturnBackActionPerformed(evt);
            }
        });

        btn_returnEquip.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_returnEquip.setText("Return Equipment");
        btn_returnEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_returnEquipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout adminReturn1Layout = new javax.swing.GroupLayout(adminReturn1);
        adminReturn1.setLayout(adminReturn1Layout);
        adminReturn1Layout.setHorizontalGroup(
            adminReturn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminReturn1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminReturn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_returnCode)
                    .addGroup(adminReturn1Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminReturn1Layout.createSequentialGroup()
                        .addComponent(btn_returnEquip)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 382, Short.MAX_VALUE)
                        .addComponent(btn_adminReturnBack)))
                .addContainerGap())
        );
        adminReturn1Layout.setVerticalGroup(
            adminReturn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminReturn1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_returnCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                .addGroup(adminReturn1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_adminReturnBack)
                    .addComponent(btn_returnEquip))
                .addContainerGap())
        );

        javax.swing.GroupLayout adminReturnLayout = new javax.swing.GroupLayout(adminReturn);
        adminReturn.setLayout(adminReturnLayout);
        adminReturnLayout.setHorizontalGroup(
            adminReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminReturnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminReturn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        adminReturnLayout.setVerticalGroup(
            adminReturnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminReturnLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(adminReturn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(adminReturn, "card14");

        studentLogin1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbl_studentID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbl_studentID.setText("Enter Student ID:");

        txt_studentID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        btn_enterStudentID.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_enterStudentID.setText("Enter");
        btn_enterStudentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_enterStudentIDActionPerformed(evt);
            }
        });

        btn_studentBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentBack.setText("Back");
        btn_studentBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentBackActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Enter Password:");

        txt_studentPass.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        javax.swing.GroupLayout studentLogin1Layout = new javax.swing.GroupLayout(studentLogin1);
        studentLogin1.setLayout(studentLogin1Layout);
        studentLogin1Layout.setHorizontalGroup(
            studentLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentLogin1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_studentID, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txt_studentPass)
                    .addGroup(studentLogin1Layout.createSequentialGroup()
                        .addGroup(studentLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_studentID)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(studentLogin1Layout.createSequentialGroup()
                        .addComponent(btn_enterStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 425, Short.MAX_VALUE)
                        .addComponent(btn_studentBack)))
                .addContainerGap())
        );
        studentLogin1Layout.setVerticalGroup(
            studentLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLogin1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_studentID)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_studentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_studentPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addGroup(studentLogin1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_studentBack)
                    .addComponent(btn_enterStudentID))
                .addContainerGap())
        );

        javax.swing.GroupLayout studentLoginLayout = new javax.swing.GroupLayout(studentLogin);
        studentLogin.setLayout(studentLoginLayout);
        studentLoginLayout.setHorizontalGroup(
            studentLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentLogin1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        studentLoginLayout.setVerticalGroup(
            studentLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentLogin1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(studentLogin, "card4");

        studentAction1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_studentSwitchAccount.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentSwitchAccount.setText("Switch account");
        btn_studentSwitchAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentSwitchAccountActionPerformed(evt);
            }
        });

        btn_studentLogout.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentLogout.setText("Logout");
        btn_studentLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentLogoutActionPerformed(evt);
            }
        });

        btn_borrow.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_borrow.setText("Borrow equipment");
        btn_borrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrowActionPerformed(evt);
            }
        });

        btn_viewStudentInfo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_viewStudentInfo.setText("View student info");
        btn_viewStudentInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewStudentInfoActionPerformed(evt);
            }
        });

        btn_studentViewQueue.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentViewQueue.setText("View your request");
        btn_studentViewQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentViewQueueActionPerformed(evt);
            }
        });

        btn_requestCancel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_requestCancel.setText("Cancel request");
        btn_requestCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_requestCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentAction1Layout = new javax.swing.GroupLayout(studentAction1);
        studentAction1.setLayout(studentAction1Layout);
        studentAction1Layout.setHorizontalGroup(
            studentAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentAction1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_borrow, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(studentAction1Layout.createSequentialGroup()
                        .addComponent(btn_studentSwitchAccount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 392, Short.MAX_VALUE)
                        .addComponent(btn_studentLogout))
                    .addComponent(btn_studentViewQueue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_requestCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_viewStudentInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        studentAction1Layout.setVerticalGroup(
            studentAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentAction1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_borrow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_studentViewQueue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_requestCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_viewStudentInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addGroup(studentAction1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_studentSwitchAccount)
                    .addComponent(btn_studentLogout))
                .addContainerGap())
        );

        javax.swing.GroupLayout studentActionLayout = new javax.swing.GroupLayout(studentAction);
        studentAction.setLayout(studentActionLayout);
        studentActionLayout.setHorizontalGroup(
            studentActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentAction1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        studentActionLayout.setVerticalGroup(
            studentActionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentActionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentAction1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(studentAction, "card6");

        studentLendA1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_studentLendABack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentLendABack.setText("Back");
        btn_studentLendABack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentLendABackActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Equipment(s):");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Amount:");

        spn_mm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        spn_psu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        spn_sigGen.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        spn_osci.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        spn_clip.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cmb_mm.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_mm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Digital", "Analog" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Type:");

        btn_borrowEquip.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_borrowEquip.setText("Borrow Equipment");
        btn_borrowEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrowEquipActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Multimeter");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Power Supply");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Signal Generator");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Oscilloscope");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Alligator Clips (10 pcs.)");

        cmb_sigGen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmb_sigGen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Digital", "Analog" }));

        javax.swing.GroupLayout studentLendA1Layout = new javax.swing.GroupLayout(studentLendA1);
        studentLendA1.setLayout(studentLendA1Layout);
        studentLendA1Layout.setHorizontalGroup(
            studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLendA1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(studentLendA1Layout.createSequentialGroup()
                        .addComponent(btn_borrowEquip)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 378, Short.MAX_VALUE)
                        .addComponent(btn_studentLendABack))
                    .addGroup(studentLendA1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(spn_clip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, studentLendA1Layout.createSequentialGroup()
                        .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spn_psu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_sigGen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_mm, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spn_osci, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, studentLendA1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(studentLendA1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addGroup(studentLendA1Layout.createSequentialGroup()
                                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmb_sigGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmb_mm, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        studentLendA1Layout.setVerticalGroup(
            studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentLendA1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cmb_mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_psu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_sigGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cmb_sigGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_osci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spn_clip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(studentLendA1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_studentLendABack)
                    .addComponent(btn_borrowEquip))
                .addContainerGap())
        );

        javax.swing.GroupLayout studentLendALayout = new javax.swing.GroupLayout(studentLendA);
        studentLendA.setLayout(studentLendALayout);
        studentLendALayout.setHorizontalGroup(
            studentLendALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLendALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentLendA1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        studentLendALayout.setVerticalGroup(
            studentLendALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentLendALayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentLendA1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(studentLendA, "card7");

        studentView1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbl_studentQueue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Equipment Code", "Equipment Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_studentQueue);

        btn_studentViewBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btn_studentViewBack.setText("Back");
        btn_studentViewBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_studentViewBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout studentView1Layout = new javax.swing.GroupLayout(studentView1);
        studentView1.setLayout(studentView1Layout);
        studentView1Layout.setHorizontalGroup(
            studentView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentView1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addComponent(btn_studentViewBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        studentView1Layout.setVerticalGroup(
            studentView1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, studentView1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_studentViewBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout studentViewLayout = new javax.swing.GroupLayout(studentView);
        studentView.setLayout(studentViewLayout);
        studentViewLayout.setHorizontalGroup(
            studentViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        studentViewLayout.setVerticalGroup(
            studentViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(studentView1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Main.add(studentView, "card8");

        getContentPane().add(Main, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_studentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentActionPerformed
        // TODO add your handling code here:
        switch_Panel("studentLogin");
    }//GEN-LAST:event_btn_studentActionPerformed

    private void btn_administratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_administratorActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminLogin");
    }//GEN-LAST:event_btn_administratorActionPerformed

    private void btn_adminBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("Login");
    }//GEN-LAST:event_btn_adminBackActionPerformed

    private void btn_studentBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("Login");
    }//GEN-LAST:event_btn_studentBackActionPerformed

    private void btn_exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_exitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btn_exitActionPerformed

    private void btn_adminLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminLoginActionPerformed
        // TODO add your handling code here:
        connect();
        if(check_Fields("adminLogin") == true){
            try{
                String in_adminID = txt_adminID.getText();
                String in_adminPass = txt_adminPass.getText();
                String sql = "Select first_name from adminAccount where admin_ID='"+in_adminID+"' and " + "pin_password='" + in_adminPass + "'";
                SQLStatement = con.prepareStatement(sql);
                queryResultSet = SQLStatement.executeQuery(sql);
                if(queryResultSet.next()){
                    current_admin = in_adminID;
                    String adminName = queryResultSet.getString("first_name");
                    say("Welcome " + adminName +  "!");
                    clear_Fields("adminLogin");
                    switch_Panel("adminAction");
                    login_history("admin", current_admin);
                }else{
                    say("Admin ID and Pin Passwords does not match!");
                    clear_Fields("adminLogin");
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }else{
            say("Some fields are empty!");
            clear_Fields("adminLogin");
        }
    }//GEN-LAST:event_btn_adminLoginActionPerformed

    private void btn_enterStudentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_enterStudentIDActionPerformed
        // TODO add your handling code here:
        connect();
        if(check_Fields("studentLogin") == true){
            try{
                String in_studentID = txt_studentID.getText();
                String in_studentPass = txt_studentPass.getText();
                String sql = "Select * from studentAccount where student_ID='" + in_studentID
                        + "' and pin_password='" + in_studentPass + "'";
                SQLStatement = con.prepareStatement(sql);
                queryResultSet = SQLStatement.executeQuery(sql);
                if(queryResultSet.next()){
                    String studentName = queryResultSet.getString("first_name");
                    say("Welcome " + studentName + "!");
                    current_student = in_studentID;
                    clear_Fields("studentLogin");
                    switch_Panel("studentAction");
                    login_history("student", current_student);
                }else{
                    say("Student ID and Pin Passwords does not match!");
                    clear_Fields("studentLogin");
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }else{
            say("Some fields are empty!");
            clear_Fields("studentLogin");
        }
    }//GEN-LAST:event_btn_enterStudentIDActionPerformed

    private void btn_adminLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminLogoutActionPerformed
        // TODO add your handling code here:
        switch_Panel("Login");
        current_admin="";
    }//GEN-LAST:event_btn_adminLogoutActionPerformed

    private void btn_adminSwitchAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminSwitchAccountActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminLogin");
        current_admin="";
    }//GEN-LAST:event_btn_adminSwitchAccountActionPerformed

    private void btn_studentSwitchAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentSwitchAccountActionPerformed
        // TODO add your handling code here:
        current_student = "";
        switch_Panel("studentLogin");
    }//GEN-LAST:event_btn_studentSwitchAccountActionPerformed

    private void btn_studentLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentLogoutActionPerformed
        // TODO add your handling code here:
        current_student = "";
        switch_Panel("Login");
    }//GEN-LAST:event_btn_studentLogoutActionPerformed

    private void btn_borrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrowActionPerformed
        // TODO add your handling code here:
        connect();
        try{
            String sql = "Select * from studentAccount where student_ID='" + current_student + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            queryResultSet.next();
            String return_status = queryResultSet.getString("return_status");
            String queue_status = queryResultSet.getString("queue_status");
            String name = queryResultSet.getString("first_name");
            if(queue_status.equals("no request")){
                if(return_status.equals("cleared")){
                    switch_Panel("studentLendA");
                }else{
                    say(name + ", you still have unreturnd item(s)!"
                            + "\nYou cannot borrow equipment until you are cleared\nPlease consult the lab technician on duty.");
                    current_student = "";
                    switch_Panel("Login");
                }
            }else{
                say(name + ", you still have an equipment request ongoing!");
            }
        }catch(SQLException | HeadlessException e){
            JOptionPane.showMessageDialog(this, "Error:\n" + e);
        }
    }//GEN-LAST:event_btn_borrowActionPerformed

    private void btn_studentLendABackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentLendABackActionPerformed
        // TODO add your handling code here:
        switch_Panel("studentAction");
    }//GEN-LAST:event_btn_studentLendABackActionPerformed

    private void btn_borrowEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrowEquipActionPerformed
        // TODO add your handling code here:
        connect();
        int val_mm = chk_spn("spn_mm");
        int val_psu = chk_spn("spn_psu");
        int val_sigGen = chk_spn("spn_sigGen");
        int val_osci = chk_spn("spn_osci");
        int val_clip = chk_spn("spn_clip");
        boolean ok_all = false;
        boolean all_success = false;
        Stack stack_mm = new Stack();
        Stack stack_psu = new Stack();
        Stack stack_sigGen = new Stack();
        Stack stack_osci = new Stack();
        Stack stack_clip = new Stack();
        Stack stack_all = new Stack();
        Stack stack_name_mm = new Stack();
        Stack stack_name_psu = new Stack();
        Stack stack_name_sigGen = new Stack();
        Stack stack_name_osci = new Stack();
        Stack stack_name_clip = new Stack();
        Stack stack_name_all = new Stack();
        Stack stack_shelf_mm = new Stack();
        Stack stack_shelf_psu = new Stack();
        Stack stack_shelf_sigGen = new Stack();
        Stack stack_shelf_osci = new Stack();
        Stack stack_shelf_clip = new Stack();
        Stack stack_shelf_all = new Stack();
        //System.out.print(val_mm);
        //System.out.print(val_psu);
        //System.out.print(val_sigGen);
        //System.out.print(val_osci);
        //System.out.print(val_clip);
        if(val_mm>=0 && val_psu>=0 && val_sigGen>=0 && val_osci>=0 && val_clip>=0){
            int val_total = val_mm + val_psu + val_sigGen + val_osci + val_clip;
            if(val_total!=0){
                String type_mm = get_Combo("cmb_mm");
                String type_sigGen = get_Combo("cmb_sigGen");
                if(val_mm > 0){
                    stack_mm.removeAllElements();
                    stack_name_mm.removeAllElements();
                    stack_shelf_mm.removeAllElements();
                    try{
                        String sql = "Select * from equipment_info where equip_name='" + type_mm
                                + " Multimeter' and requested='no' limit " + Integer.toString(val_mm);
                        SQLStatement = con.prepareStatement(sql);
                        queryResultSet = SQLStatement.executeQuery(sql);
                        while(queryResultSet.next()){
                            stack_mm.push(queryResultSet.getString("equip_code"));
                            stack_name_mm.push(queryResultSet.getString("equip_name"));
                            stack_shelf_mm.push(queryResultSet.getString("shelf_location"));
                        }
                        if(stack_mm.size() < val_mm){
                            say("There aren't enough " + type_mm.toLowerCase()
                                    + " multimeters avaailable!");
                            stack_mm.removeAllElements();
                            stack_name_mm.removeAllElements();
                            stack_shelf_mm.removeAllElements();
                            ok_all = false;
                        }else{
                            ok_all = true;
                        }
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        ok_all = false;
                    }
                }
                if(val_psu > 0){
                    stack_psu.removeAllElements();
                    stack_name_psu.removeAllElements();
                    stack_shelf_psu.removeAllElements();
                    try{
                        String sql = "Select * from equipment_info where equip_name='Power Supply' and requested='no' limit "
                                + Integer.toString(val_psu);
                        SQLStatement = con.prepareStatement(sql);
                        queryResultSet = SQLStatement.executeQuery(sql);
                        while(queryResultSet.next()){
                            stack_psu.push(queryResultSet.getString("equip_code"));
                            stack_name_psu.push(queryResultSet.getString("equip_name"));
                            stack_shelf_psu.push(queryResultSet.getString("shelf_location"));
                        }
                        if(stack_psu.size() < val_psu){
                            say("There aren't enough power supply units available!");
                            stack_psu.removeAllElements();
                            stack_name_psu.removeAllElements();
                            stack_shelf_psu.removeAllElements();
                            ok_all = false;
                        }else{
                            ok_all = true;
                        }
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        ok_all = false;
                    }
                }
                if(val_sigGen > 0){
                    stack_sigGen.removeAllElements();
                    stack_name_sigGen.removeAllElements();
                    stack_shelf_sigGen.removeAllElements();
                    try{
                        String sql = "Select * from equipment_info where equip_name='" + type_sigGen
                                + " Signal Generator' and requested='no' limit " + Integer.toString(val_sigGen);
                        SQLStatement = con.prepareStatement(sql);
                        queryResultSet = SQLStatement.executeQuery(sql);
                        while(queryResultSet.next()){
                            stack_sigGen.push(queryResultSet.getString("equip_code"));
                            stack_name_sigGen.push(queryResultSet.getString("equip_name"));
                            stack_shelf_sigGen.push(queryResultSet.getString("shelf_location"));
                            
                        }
                        if(stack_sigGen.size() < val_sigGen){
                            say("There aren't enough " + type_sigGen.toLowerCase()
                                    + " generators available!");
                            stack_sigGen.removeAllElements();
                            stack_name_sigGen.removeAllElements();
                            stack_shelf_sigGen.removeAllElements();
                            ok_all = false;
                        }else{
                            ok_all = true;
                        }
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        ok_all = false;
                    }
                }
                if(val_osci > 0){
                    stack_osci.removeAllElements();
                    stack_name_osci.removeAllElements();
                    stack_shelf_osci.removeAllElements();
                    try{
                        String sql = "Select * from equipment_info where equip_name='Oscilloscope' and requested='no' limit "
                                + Integer.toString(val_osci);
                        SQLStatement = con.prepareStatement(sql);
                        queryResultSet = SQLStatement.executeQuery(sql);
                        while(queryResultSet.next()){
                            stack_osci.push(queryResultSet.getString("equip_code"));
                            stack_name_osci.push(queryResultSet.getString("equip_name"));
                            stack_shelf_osci.push(queryResultSet.getString("shelf_location"));
                        }
                        if(stack_osci.size() < val_osci){
                            say("There aren't enough oscilloscopes availabe!");
                            stack_osci.removeAllElements();
                            stack_name_osci.removeAllElements();
                            stack_shelf_osci.removeAllElements();
                            ok_all = false;
                        }else{
                            ok_all = true;
                        }
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        ok_all = false;
                    }
                }
                if(val_clip > 0){
                    stack_clip.removeAllElements();
                    stack_name_clip.removeAllElements();
                    stack_shelf_clip.removeAllElements();
                    try{
                        String sql = "Select * from equipment_info where equip_name='Alligator Clips' and requested='no' limit "
                                + Integer.toString(val_clip);
                        SQLStatement = con.prepareStatement(sql);
                        queryResultSet = SQLStatement.executeQuery(sql);
                        while(queryResultSet.next()){
                            stack_clip.push(queryResultSet.getString("equip_code"));
                            stack_name_clip.push(queryResultSet.getString("equip_name"));
                            stack_shelf_clip.push(queryResultSet.getString("shelf_location"));
                        }
                        if(stack_clip.size() < val_clip){
                            say("There aren't enough alligator clips available!");
                            stack_clip.removeAllElements();
                            stack_name_clip.removeAllElements();
                            stack_shelf_clip.removeAllElements();
                            ok_all = false;
                        }else{
                            ok_all = true;
                        }
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        ok_all = false;
                    }
                }
                if(ok_all == true){
                    stack_all.removeAllElements();
                    stack_name_all.removeAllElements();
                    stack_shelf_all.removeAllElements();
                    while (val_mm > 0){
                        stack_all.push(stack_mm.pop());
                        stack_name_all.push(stack_name_mm.pop());
                        stack_shelf_all.push(stack_shelf_mm.pop());
                        val_mm--;
                    }
                    while (val_psu > 0){
                        stack_all.push(stack_psu.pop());
                        stack_name_all.push(stack_name_psu.pop());
                        stack_shelf_all.push(stack_shelf_psu.pop());
                        val_psu--;
                    }
                    while (val_sigGen > 0){
                        stack_all.push(stack_sigGen.pop());
                        stack_name_all.push(stack_name_sigGen.pop());
                        stack_shelf_all.push(stack_shelf_sigGen.pop());
                        val_sigGen--;
                    }
                    while(val_osci > 0){
                        stack_all.push(stack_osci.pop());
                        stack_name_all.push(stack_name_osci.pop());
                        stack_shelf_all.push(stack_shelf_osci.pop());
                        val_osci--;
                    }
                    while(val_clip > 0){
                        stack_all.push(stack_clip.pop());
                        stack_name_all.push(stack_name_clip.pop());
                        stack_shelf_all.push(stack_shelf_clip.pop());
                        val_clip--;
                    }
                    while(val_total > 0){
                        try{
                            String sql = "Update equipment_info set requested='yes' where equip_Code='"
                                    + stack_all.peek().toString() + "'";
                            SQLStatement = con.prepareStatement(sql);
                            SQLStatement.execute();
                            try{
                                String sql1 = "Insert into lend_queue (student_ID, equip_Code, equip_name, shelf_location) values (?, ?, ?, ?)";
                                SQLStatement = con.prepareStatement(sql1);
                                SQLStatement.setString(1, current_student);
                                SQLStatement.setString(2, stack_all.pop().toString());
                                SQLStatement.setString(3, stack_name_all.pop().toString());
                                SQLStatement.setString(4, stack_shelf_all.pop().toString());
                                SQLStatement.execute();
                                all_success = true;
                                val_total--;
                            }catch(SQLException | HeadlessException e){
                                say("Error:\n" + e);
                            }
                        }catch(SQLException | HeadlessException e){
                            say("Error:\n" + e);
                        }
                    }
                    if(all_success==true){
                        try{
                            String sql = "Update studentaccount set queue_status ='ok' where student_ID='"
                                    + current_student + "'";
                            SQLStatement = con.prepareStatement(sql);
                            SQLStatement.execute();
                            JOptionPane.showMessageDialog(this, "Your request is now queued");
                            switch_Panel("studentAction");
                        }catch(SQLException | HeadlessException e){
                            say("Error:\n" + e);
                        }
                    }
                }
            }else{
                say("Please enter amount");
            }
        }else{
            say("You can't have negative values");
        }
        clear_Spinner();
    }//GEN-LAST:event_btn_borrowEquipActionPerformed

    private void txt_adminIDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_adminIDMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txt_adminIDMouseClicked

    private void btn_studentViewQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentViewQueueActionPerformed
        // TODO add your handling code here:
        connect();
        String queue_status = "ok";
        try{
            String sql = "Select queue_status from studentaccount where student_ID='" + current_student
                    + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                queue_status = queryResultSet.getString("queue_status");
            }
            if(queue_status.equals("ok")){
                viewAll("tbl_studentQueue");
            }else{
                JOptionPane.showMessageDialog(this, "You haven't requested any equipment yet!");
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_studentViewQueueActionPerformed

    private void btn_requestCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_requestCancelActionPerformed
        // TODO add your handling code here:
        String queue_status = "ok";
        connect();
        try{
            String sql = "Select queue_status from studentaccount where student_ID='"
                    + current_student + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                queue_status = queryResultSet.getString("queue_status");
            }
            if(queue_status.equals("ok")){
                int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you would like to cancel your request?",
                        "Cancel your request", JOptionPane.YES_NO_OPTION);
                if(confirm == 0){
                    boolean success_1, success_2;
                    connect();
                    try{
                        String sql1 = "Delete from lend_queue where student_ID='" + current_student + "'";
                        SQLStatement = con.prepareStatement(sql1);
                        SQLStatement.execute();
                        success_1 = true;
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        success_1 = false;
                    }
                    try{
                        String sql1 = "Update studentaccount set queue_status='no request' where student_ID='"
                                + current_student + "'";
                        SQLStatement = con.prepareStatement(sql1);
                        SQLStatement.execute();
                        success_2 = true;
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        success_2 = false;
                    }
                    if(success_1 == true && success_2 == true){
                        say("Request has been cancelled");
                    }
                }
            }else{
                say("You have no requests queued");
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
        
    }//GEN-LAST:event_btn_requestCancelActionPerformed

    private void btn_viewStudentInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewStudentInfoActionPerformed
        // TODO add your handling code here:
        connect();
        String first_name = "";
        String middle_name = "";
        String last_name = "";
        String year_level = "";
        String course = "";
        String return_status = "";
        String queue_status = "";
        String queue_message;
        try{
            String sql = "Select * from studentaccount where student_ID='" + current_student + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                first_name = queryResultSet.getString("first_name");
                middle_name = queryResultSet.getString("middle_name");
                last_name = queryResultSet.getString("last_name");
                year_level = queryResultSet.getString("year_level");
                course = queryResultSet.getString("course");
                return_status = queryResultSet.getString("return_status");
                queue_status = queryResultSet.getString("queue_status");
                //pin_password = queryResultSet.getString("pin_password");
            }
            if(queue_status.equals("ok")){
                queue_message = "Yes";
            }else{
                queue_message = "None";
            }
            say("Name: " + first_name + " " + middle_name + " " + last_name + "\nYear: " + year_level
                    + "\nCourse: " + course + "\nAll borrowed items returned: " + return_status
                    + "\nOngoing equipment requests: " + queue_message);
            //
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_viewStudentInfoActionPerformed

    private void btn_studentViewBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentViewBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("studentAction");
    }//GEN-LAST:event_btn_studentViewBackActionPerformed

    private void btn_addEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addEquipmentActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminAddEquip");
    }//GEN-LAST:event_btn_addEquipmentActionPerformed

    private void btn_adminAddEquipBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminAddEquipBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminAction");
    }//GEN-LAST:event_btn_adminAddEquipBackActionPerformed

    private void btn_insertEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertEquipmentActionPerformed
        // TODO add your handling code here:
        connect();
        String in_code = txt_addCode.getText();
        String in_name = txt_addName.getText();
        String in_manu = txt_addManu.getText();
        String in_shelf = txt_addShelf.getText();
        try{
            String sql = "Insert into equipment_info values(?, ?, ?, ?, ?, ?)";
            SQLStatement = con.prepareStatement(sql);
            SQLStatement.setString(1, in_code);
            SQLStatement.setString(2, in_name);
            SQLStatement.setString(3, in_manu);
            SQLStatement.setString(4, in_shelf);
            SQLStatement.setString(5, "returned");
            SQLStatement.setString(6, "no");
            SQLStatement.execute();
            say("Equipment added!");
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
        clear_Fields("adminAddEquip");
        //clear
    }//GEN-LAST:event_btn_insertEquipmentActionPerformed

    private void btn_adminViewAllEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewAllEquipActionPerformed
        // TODO add your handling code here:
        viewAll("tbl_adminViewAllEquip");
    }//GEN-LAST:event_btn_adminViewAllEquipActionPerformed

    private void btn_editEquipInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editEquipInfoActionPerformed
        // TODO add your handling code here:
        equip_row = 0;
        equip_row_code = "";
        equip_row = tbl_adminViewAllEquip.getSelectedRow();
        equip_row_code = tbl_adminViewAllEquip.getValueAt(equip_row, 0).toString();
        connect();
        try{
            String sql = "Select * from equipment_info where equip_Code='"
                    + equip_row_code + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                txt_adminEditCode.setText(queryResultSet.getString("equip_Code"));
                txt_adminEditName.setText(queryResultSet.getString("equip_name"));
                txt_adminEditManu.setText(queryResultSet.getString("equip_manufacturer"));
                txt_adminEditShelf.setText(queryResultSet.getString("shelf_location"));
                if(queryResultSet.getString("return_status").equals("returned")){
                    cmb_returnStatus.setSelectedIndex(0);
                }else{
                    cmb_returnStatus.setSelectedIndex(1);
                }
                if(queryResultSet.getString("requested").equals("no")){
                    cmb_queueStatus.setSelectedIndex(0);
                }else{
                    cmb_queueStatus.setSelectedIndex(1);
                }
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
        switch_Panel("adminEditEquip");
    }//GEN-LAST:event_btn_editEquipInfoActionPerformed

    private void btn_updateEquipInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateEquipInfoActionPerformed
        // TODO add your handling code here:
        connect();
        try{
            String in_EditCode = txt_adminEditCode.getText();
            String in_EditName = txt_adminEditName.getText();
            String in_EditManu = txt_adminEditManu.getText();
            String in_EditShelf = txt_adminEditShelf.getText();
            String in_EditStatus;
            String in_EditQStatus;
            if(cmb_returnStatus.getSelectedIndex()==0){
                in_EditStatus = "returned";
            }else{
                in_EditStatus = "not returned";
            }
            if(cmb_queueStatus.getSelectedIndex()==0){
                in_EditQStatus = "no";
            }else{
                in_EditQStatus = "requested";
            }
            String sql = "Update equipment_info set equip_Code='"
                    + in_EditCode + "', equip_name='"
                    + in_EditName + "', equip_manufacturer='"
                    + in_EditManu + "', shelf_location='"
                    + in_EditShelf + "', return_status='"
                    + in_EditStatus + "', requested='"
                    + in_EditQStatus + "' where equip_Code='"
                    + equip_row_code + "'";
            SQLStatement = con.prepareStatement(sql);
            SQLStatement.execute();
            clear_Fields("adminEditEquip");
            say("Equipment information updated!");
            viewAll("tbl_adminViewAllEquip");
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_updateEquipInfoActionPerformed

    private void tbl_adminViewAllEquipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_adminViewAllEquipMouseClicked
        // TODO add your handling code here:
        btn_editEquipInfo.setEnabled(true);
    }//GEN-LAST:event_tbl_adminViewAllEquipMouseClicked

    private void btn_adminViewAllEquipBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewAllEquipBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminAction");
    }//GEN-LAST:event_btn_adminViewAllEquipBackActionPerformed

    private void btn_adminEditEquipBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminEditEquipBackActionPerformed
        // TODO add your handling code here:
        viewAll("tbl_adminViewAllEquip");
    }//GEN-LAST:event_btn_adminEditEquipBackActionPerformed

    private void tbl_adminRequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_adminRequestMouseClicked
        // TODO add your handling code here:
        btn_adminViewStudentRequest.setEnabled(true);
    }//GEN-LAST:event_tbl_adminRequestMouseClicked

    private void btn_adminViewStudentRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewStudentRequestActionPerformed
        // TODO add your handling code here:
        int request_row;
        selected_student = "";
        request_row = tbl_adminRequest.getSelectedRow();
        selected_student = tbl_adminRequest.getValueAt(request_row, 0).toString();
        viewAll("tbl_adminProcessRequest");
    }//GEN-LAST:event_btn_adminViewStudentRequestActionPerformed

    private void btn_adminViewRequestBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewRequestBackActionPerformed
        // TODO add your handling code here:
        selected_student = "";
        switch_Panel("adminAction");
    }//GEN-LAST:event_btn_adminViewRequestBackActionPerformed

    private void tbl_adminProcessRequestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_adminProcessRequestMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_adminProcessRequestMouseClicked

    private void btn_adminProcessRequestBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminProcessRequestBackActionPerformed
        // TODO add your handling code here:
        selected_student = "";
        viewAll("tbl_adminRequest");
    }//GEN-LAST:event_btn_adminProcessRequestBackActionPerformed

    private void btn_approveRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_approveRequestActionPerformed
        // TODO add your handling code here:
        connect();
        Stack lend = new Stack();
        lend.removeAllElements();
        try{
            String sql = "Select equip_Code from lend_queue where student_ID='"
                    + selected_student + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                lend.push(queryResultSet.getString("equip_Code"));
            }
            try{
                String sql1 = "Delete from lend_queue where student_ID='"
                        + selected_student + "'";
                SQLStatement = con.prepareStatement(sql1);
                SQLStatement.execute();
                try{
                    String sql2 = "Update studentaccount set queue_status='no request' where student_ID='"
                            + selected_student + "'";
                    SQLStatement = con.prepareStatement(sql2);
                    SQLStatement.execute();
                    try{
                        String sql3 = "Update studentaccount set return_status='not cleared' where student_ID='"
                                + selected_student + "'";
                        SQLStatement = con.prepareStatement(sql3);
                        SQLStatement.execute();
                        //int lend_size = lend.size();
                        while(!lend.empty()){
                            try{
                                String sql4 = "Update equipment_info set return_status='not returned', requested='no' where equip_Code='"
                                        + lend.peek().toString() + "'";
                                SQLStatement = con.prepareStatement(sql4);
                                SQLStatement.execute();
                            }catch(SQLException | HeadlessException e){
                                say("Error:\n" + e);
                            }
                            try{
                                //DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                                Calendar cal = Calendar.getInstance();
                                String sql6 = "Insert into lend_history (equip_Code, student_ID, lend_date, return_date) values(?, ?, ?, ?)";
                                SQLStatement = con.prepareStatement(sql6);
                                SQLStatement.setString(1, lend.peek().toString());
                                SQLStatement.setString(2, selected_student);
                                String date = cal.get(Calendar.HOUR_OF_DAY)+ ":"
                                        + cal.get(Calendar.MINUTE) + " - "
                                        + cal.get(Calendar.MONTH) + "/"
                                        + cal.get(Calendar.DATE) + "/"
                                        + cal.get(Calendar.YEAR);
                                SQLStatement.setString(3, date);
                                SQLStatement.setString(4, "N/A");
                                SQLStatement.execute();
                            }catch(SQLException | HeadlessException e){
                                say("Error:\n" + e);
                            }
                            try{
                                String sql5 = "Insert into lend_list values (?, ?)";
                                SQLStatement = con.prepareStatement(sql5);
                                SQLStatement.setString(1, selected_student);
                                SQLStatement.setString(2, lend.pop().toString());
                                SQLStatement.execute();
                            }catch(SQLException | HeadlessException e){
                                say("Error:\n" + e);
                            }
                        }
                        say("Request has been approved!");
                        selected_student = "";
                        viewAll("tbl_adminRequest");
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                    }
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_approveRequestActionPerformed

    private void btn_rejectRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rejectRequestActionPerformed
        // TODO add your handling code here:
        Stack reject = new Stack();
        connect();
        try{
            reject.removeAllElements();
            String sql = "Select equip_Code from lend_queue where student_ID='"
                    + selected_student + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                reject.push(queryResultSet.getString("equip_Code"));
            }
            while(!reject.empty()){
                try{
                    String sql1 = "Update equipment_info set requested='no' where equip_Code='"
                            + reject.pop().toString() + "'";
                    SQLStatement = con.prepareStatement(sql1);
                    SQLStatement.execute();                      
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
            }
            try{
                String sql2 = "Delete from lend_queue where student_ID='"
                        + selected_student + "'";
                SQLStatement = con.prepareStatement(sql2);
                SQLStatement.execute();
                try{
                    String sql3 = "Update studentaccount set queue_status='no request' where student_ID='"
                            + selected_student + "'";
                    SQLStatement = con.prepareStatement(sql3);
                    SQLStatement.execute();
                    say("Request has been rejected!");
                    viewAll("tbl_adminRequest");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_rejectRequestActionPerformed

    private void btn_viewRequestsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewRequestsActionPerformed
        // TODO add your handling code here:
        selected_student = "";
        viewAll("tbl_adminRequest");
    }//GEN-LAST:event_btn_viewRequestsActionPerformed

    private void btn_adminReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminReturnActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminReturn");
        btn_returnEquip.setEnabled(false);
    }//GEN-LAST:event_btn_adminReturnActionPerformed

    private void btn_returnEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_returnEquipActionPerformed
        // TODO add your handling code here:
        if(check_Fields("adminReturn") == true){
            //return them items
            String in_returnCode = txt_returnCode.getText();
            connect();
            try{
                String sql = "Delete from lend_list where equip_Code='"
                        + in_returnCode + "'";
                SQLStatement = con.prepareStatement(sql);
                SQLStatement.execute();
                try{
                    String sql1 = "Update equipment_info set return_status='returned' where equip_Code='"
                            + in_returnCode + "'";
                    SQLStatement = con.prepareStatement(sql1);
                    SQLStatement.execute();
                    try{
                        //DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                        Calendar cal = Calendar.getInstance();
                        String date = cal.get(Calendar.HOUR_OF_DAY)+ ":"
                                        + cal.get(Calendar.MINUTE) + " - "
                                        + cal.get(Calendar.MONTH) + "/"
                                        + cal.get(Calendar.DATE) + "/"
                                        + cal.get(Calendar.YEAR);
                        String sql2 = "Update lend_history set return_date='"
                                + date + "' where equip_Code='"
                                + in_returnCode + "'";
                        SQLStatement = con.prepareStatement(sql2);
                        SQLStatement.execute();
                        clear_Fields("adminReturn");
                        say("Equipment has been returned!");
                        btn_returnEquip.setEnabled(false);
                        /**/
                    }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                    }
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }else{
            say("Enter equipment code!");
        }
        clear_Fields("adminReturn");
    }//GEN-LAST:event_btn_returnEquipActionPerformed

    private void txt_returnCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_returnCodeMouseClicked
        // TODO add your handling code here:
        btn_returnEquip.setEnabled(true);
    }//GEN-LAST:event_txt_returnCodeMouseClicked

    private void tbl_historyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_historyMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_historyMouseClicked

    private void btn_adminHistoryBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminHistoryBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminActionP2");
    }//GEN-LAST:event_btn_adminHistoryBackActionPerformed

    private void btn_adminHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminHistoryActionPerformed
        // TODO add your handling code here:
        viewAll("tbl_history");
    }//GEN-LAST:event_btn_adminHistoryActionPerformed

    private void btn_adminReturnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminReturnBackActionPerformed
        // TODO add your handling code here:
        connect();
        Stack student_lend = new Stack();
        Stack student_list = new Stack();
        student_lend.removeAllElements();
        student_list.removeAllElements();
        int count1;
        try{
            String sql3 = "Select student_ID from lend_list group by student_ID";
            SQLStatement = con.prepareStatement(sql3);
            queryResultSet = SQLStatement.executeQuery(sql3);
            while(queryResultSet.next()){
                student_lend.push(queryResultSet.getString("student_ID"));
            }
            try{
                String sql4 = "Select student_ID from studentaccount";
                SQLStatement = con.prepareStatement(sql4);
                queryResultSet = SQLStatement.executeQuery(sql4);
                while(queryResultSet.next()){
                    student_list.push(queryResultSet.getString("student_ID"));
                }
                count1 = student_list.size();
                while(count1 > 0){
                    if(student_lend.contains(student_list.get(count1-1))){
                        try{
                            String sql5 = "Update studentaccount set return_status='not cleared' where student_ID='"
                                    + student_list.get(count1-1).toString() + "'";
                            SQLStatement = con.prepareStatement(sql5);
                            SQLStatement.execute();
                        }catch(SQLException | HeadlessException e){
                        say("Error:\n" + e);
                        }
                    }else{
                        try{
                            String sql6 = "Update studentaccount set return_status='cleared' where student_ID='"
                                    + student_list.get(count1-1).toString() + "'";
                            SQLStatement = con.prepareStatement(sql6);
                            SQLStatement.execute();
                        }catch(SQLException | HeadlessException e){
                            say("Error:\n" + e);
                        }
                    }
                    count1--;
                }
            }catch(SQLException | HeadlessException e){
                say("Error:\n" + e);
            }
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
        switch_Panel("adminAction");
    }//GEN-LAST:event_btn_adminReturnBackActionPerformed

    private void btn_adminActionP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminActionP2ActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminActionP2");
    }//GEN-LAST:event_btn_adminActionP2ActionPerformed

    private void btn_adminActionP1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminActionP1ActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminAction");
    }//GEN-LAST:event_btn_adminActionP1ActionPerformed

    private void btn_adminLogoutP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminLogoutP2ActionPerformed
        // TODO add your handling code here:
        switch_Panel("Login");
        current_admin="";
    }//GEN-LAST:event_btn_adminLogoutP2ActionPerformed

    private void btn_adminSwitchAccountP2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminSwitchAccountP2ActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminLogin");
        current_admin="";
    }//GEN-LAST:event_btn_adminSwitchAccountP2ActionPerformed

    private void btn_viewAdminInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewAdminInfoActionPerformed
        // TODO add your handling code here:
        connect();
        String first_name = "";
        String middle_name = "";
        String last_name = "";
        String department  = "";
        String position = "";
        try{
            String sql = "Select * from adminaccount where admin_ID='"
                    + current_admin + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                first_name = queryResultSet.getString("first_name");
                middle_name = queryResultSet.getString("middle_name");
                last_name = queryResultSet.getString("last_name");
                department = queryResultSet.getString("department");
                position = queryResultSet.getString("position");
            }
            say("Name: " + first_name + " " + middle_name + " " + last_name + "\n"
                    + "Department: " + department + "\n"
                    + "Position: " + position);
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_viewAdminInfoActionPerformed

    private void tbl_adminViewStudentListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_adminViewStudentListMouseClicked
        // TODO add your handling code here:
        btn_adminViewStudentDetails.setEnabled(true);
    }//GEN-LAST:event_tbl_adminViewStudentListMouseClicked

    private void btn_adminViewAllStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewAllStudentActionPerformed
        // TODO add your handling code here:
        viewAll("tbl_adminViewStudentList");
    }//GEN-LAST:event_btn_adminViewAllStudentActionPerformed

    private void btn_adminViewStudentListBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewStudentListBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminActionP2");
    }//GEN-LAST:event_btn_adminViewStudentListBackActionPerformed

    private void btn_adminViewStudentDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewStudentDetailsActionPerformed
        // TODO add your handling code here:
        int request_row;
        String request_student;
        request_row = tbl_adminViewStudentList.getSelectedRow();
        request_student = tbl_adminViewStudentList.getValueAt(request_row, 0).toString();
        connect();
        try{
            String sql = "Select * from studentaccount where student_ID='"
                    + request_student + "'";
            SQLStatement = con.prepareStatement(sql);
            queryResultSet = SQLStatement.executeQuery(sql);
            while(queryResultSet.next()){
                lbl_firstN.setText(queryResultSet.getString("first_name"));
                lbl_middleN.setText(queryResultSet.getString("middle_name"));
                lbl_lastN.setText(queryResultSet.getString("last_name"));
                lbl_SID.setText(queryResultSet.getString("student_ID"));
                lbl_course.setText(queryResultSet.getString("course"));
                lbl_yLVL.setText(queryResultSet.getString("year_level"));
                lbl_statR.setText(queryResultSet.getString("return_status"));
                lbl_statQ.setText(queryResultSet.getString("queue_status"));
                lbl_pin.setText(queryResultSet.getString("pin_password"));
                lbl_statusID.setText(queryResultSet.getString("student_ID"));
                txt_queueIn.setText(queryResultSet.getString("queue_status"));
                txt_returnIn.setText(queryResultSet.getString("return_status"));
            }
            switch_Panel("adminStudentDetails");
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }//GEN-LAST:event_btn_adminViewStudentDetailsActionPerformed

    private void btn_studentDetailsBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentDetailsBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminViewStudentList");
    }//GEN-LAST:event_btn_studentDetailsBackActionPerformed

    private void btn_studentDetailsNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentDetailsNextActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminStudentDetails2");
    }//GEN-LAST:event_btn_studentDetailsNextActionPerformed

    private void btn_adminStudentDetails2PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminStudentDetails2PreviousActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminStudentDetails");
    }//GEN-LAST:event_btn_adminStudentDetails2PreviousActionPerformed

    private void btn_adminStudentDetails2NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminStudentDetails2NextActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminStudentDetails3");
    }//GEN-LAST:event_btn_adminStudentDetails2NextActionPerformed

    private void btn_adminStudentDetails3PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminStudentDetails3PreviousActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminStudentDetails2");
    }//GEN-LAST:event_btn_adminStudentDetails3PreviousActionPerformed

    private void btn_adminStudentDetails2BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminStudentDetails2BackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminViewStudentList");
    }//GEN-LAST:event_btn_adminStudentDetails2BackActionPerformed

    private void btn_adminStudentDetails3BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminStudentDetails3BackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminViewStudentList");
    }//GEN-LAST:event_btn_adminStudentDetails3BackActionPerformed

    private void tbl_adminLoginHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_adminLoginHistoryMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_adminLoginHistoryMouseClicked

    private void tbl_studentLoginHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_studentLoginHistoryMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbl_studentLoginHistoryMouseClicked

    private void btn_viewLoginHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewLoginHistoryActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminLoginHistory");
    }//GEN-LAST:event_btn_viewLoginHistoryActionPerformed

    private void btn_adminLoginHistoryBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminLoginHistoryBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminAction");
    }//GEN-LAST:event_btn_adminLoginHistoryBackActionPerformed

    private void btn_adminViewAdminHistoryBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewAdminHistoryBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminLoginHistory");
    }//GEN-LAST:event_btn_adminViewAdminHistoryBackActionPerformed

    private void btn_adminLoginHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminLoginHistoryActionPerformed
        // TODO add your handling code here:
        viewAll("tbl_adminLoginHistory");
    }//GEN-LAST:event_btn_adminLoginHistoryActionPerformed

    private void btn_studentLoginHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_studentLoginHistoryActionPerformed
        // TODO add your handling code here:
        viewAll("tbl_studentLoginHistory");
    }//GEN-LAST:event_btn_studentLoginHistoryActionPerformed

    private void btn_adminViewStudentHistoryBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminViewStudentHistoryBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminLoginHistory");
    }//GEN-LAST:event_btn_adminViewStudentHistoryBackActionPerformed

    private void btn_updateStudent3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateStudent3ActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminStudentStatus");
    }//GEN-LAST:event_btn_updateStudent3ActionPerformed

    private void btn_adminStudentStatusBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_adminStudentStatusBackActionPerformed
        // TODO add your handling code here:
        switch_Panel("adminStudentDetails3");
    }//GEN-LAST:event_btn_adminStudentStatusBackActionPerformed

    private void btn_updateStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateStatusActionPerformed
        // TODO add your handling code here:
        //code for update
        connect();
        String studentID_In = lbl_statusID.getText();
        String queue_In = txt_queueIn.getText();
        String return_In = txt_returnIn.getText();
        try{
            String sql = "Update studentaccount set queue_status='"
                    + queue_In + "', return_status='"
                    + return_In + "' where student_ID='"
                    + studentID_In + "'";
            SQLStatement = con.prepareStatement(sql);
            SQLStatement.execute();
            say("Student status has been changed!");
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
        switch_Panel("adminViewStudentList");
    }//GEN-LAST:event_btn_updateStatusActionPerformed

    private void txt_adminEditManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_adminEditManuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_adminEditManuActionPerformed
    private void say(String  say){
        JOptionPane.showMessageDialog(this, say);
    }
    private void connect(){
        try{
            String host = "jdbc:mysql://localhost:3306/equip_project_database";
            String userName =  "root";
            String userPass =  "";
            con = DriverManager.getConnection(host, userName, userPass);
        }catch(SQLException | HeadlessException e){
            say("Error:\n" + e);
        }
    }
    private boolean check_Fields(String panel){
        switch(panel){
            case "adminLogin":
                return(!txt_adminID.getText().equals("")&&!txt_adminPass.getText().equals(""));
            case "studentLogin":
                return(!txt_studentID.getText().equals("")&&!txt_studentPass.getText().equals(""));
            case "adminReturn":
                return(!txt_returnCode.getText().equals(""));
            default:
                break;
        }
        return false;
    }
    private void clear_Fields(String panel){
        switch(panel){
            case "adminLogin":
                txt_adminID.setText(null);
                txt_adminPass.setText(null);
                break;
            case "studentLogin":
                txt_studentID.setText(null);
                txt_studentPass.setText(null);
                break;
            case "adminAddEquip":
                txt_addCode.setText(null);
                txt_addName.setText(null);
                txt_addManu.setText(null);
                txt_addShelf.setText(null);
                break;
            case "adminEditEquip":
                txt_adminEditCode.setText(null);
                txt_adminEditName.setText(null);
                txt_adminEditManu.setText(null);
                txt_adminEditShelf.setText(null);
                cmb_returnStatus.setSelectedIndex(0);
                cmb_queueStatus.setSelectedIndex(0);
                break;
            case "adminReturn":
                txt_returnCode.setText(null);
                break;
            default:
                break;
        }
    }
    private void switch_Panel(String panel){
        Main.removeAll();
        switch(panel){
            case "Login":
                Main.add(Login);
                break;
            case "adminLogin":
                Main.add(adminLogin);
                break;
            case "studentLogin":
                Main.add(studentLogin);
                break;
            case "adminAction":
                Main.add(adminAction);
                break;
            case "studentAction":
                Main.add(studentAction);
                break;
            case "studentLendA":
                Main.add(studentLendA);
                break;
            case "studentView":
                Main.add(studentView);
                break;
            case "adminAddEquip":
                Main.add(adminAddEquip);
                break;
            case "adminViewAllEquip":
                Main.add(adminViewAllEquip);
                break;
            case "adminEditEquip":
                Main.add(adminEditEquip);
                break;
            case "adminViewRequest":
                Main.add(adminViewRequest);
                break;
            case "adminProcessRequest":
                Main.add(adminProcessRequest);
                break;
            case "adminReturn":
                Main.add(adminReturn);
                break;
            case "adminHistory":
                Main.add(adminHistory);
                break;
            case "adminActionP2":
                Main.add(adminActionP2);
                break;
            case "adminViewStudentList":
                Main.add(adminViewStudentList);
                break;
            case "adminStudentDetails":
                Main.add(adminStudentDetails);
                break;
            case "adminStudentDetails2":
                Main.add(adminStudentDetails2);
                break;
            case "adminStudentDetails3":
                Main.add(adminStudentDetails3);
                break;
            case "adminLoginHistory":
                Main.add(adminLoginHistory);
                break;
            case "adminViewAdminHistory":
                Main.add(adminViewAdminHistory);
                break;
            case "adminViewStudentHistory":
                Main.add(adminViewStudentHistory);
                break;
            case "adminStudentStatus":
                Main.add(adminStudentStatus);
                break;
            default:
                break;
        }
        Main.repaint();
        Main.revalidate();
    }
    private int chk_spn(String object){
        switch(object){
            case "spn_mm":
                try{
                    spn_mm.commitEdit();
                }catch(ParseException e){
                    JOptionPane.showMessageDialog(this, "Error:\n" + e);
                }
                int val_mm = (Integer) spn_mm.getValue();
                if(val_mm >= 0){
                    return val_mm;
                }
                break;
            case "spn_psu":
                try{
                    spn_psu.commitEdit();
                }catch(ParseException e){
                    JOptionPane.showMessageDialog(this, "Error:\n" + e);
                }
                int val_psu = (Integer) spn_psu.getValue();
                if(val_psu >= 0){
                    return val_psu;
                }
                break;
            case "spn_sigGen":
                try{
                    spn_sigGen.commitEdit();
                }catch(ParseException e){
                    JOptionPane.showMessageDialog(this, "Error:\n" + e);
                }
                int val_sigGen = (Integer) spn_sigGen.getValue();
                if(val_sigGen >= 0){
                    return val_sigGen;
                }
                break;
            case "spn_osci":
                try{
                    spn_osci.commitEdit();
                }catch(ParseException e){
                    JOptionPane.showMessageDialog(this, "Error:\n" + e);
                }
                int val_osci = (Integer) spn_osci.getValue();
                if(val_osci >= 0){
                    return val_osci;
                }
                break;
            case "spn_clip":
                try{
                    spn_clip.commitEdit();
                }catch(ParseException e){
                    JOptionPane.showMessageDialog(this, "Error:\n" + e);
                }
                int val_clip = (Integer) spn_clip.getValue();
                if(val_clip >= 0){
                    return val_clip;
                }
                break;
            default:
                break;
        }
        return -1;
    }
    private void clear_Spinner(){
        spn_mm.setValue(0);
        spn_psu.setValue(0);
        spn_sigGen.setValue(0);
        spn_osci.setValue(0);
        spn_clip.setValue(0);
    }
    private String get_Combo(String object){
        String type = "";
        switch(object){
            case "cmb_mm":
                int index_mm = cmb_mm.getSelectedIndex();
                if(index_mm == 0){
                    type = "Digital";
                }else{
                    type = "Analog";
                }
                break;
            case "cmb_sigGen":
                int index_sigGen = cmb_sigGen.getSelectedIndex();
                if(index_sigGen == 0){
                    type = "Digital";
                }else{
                    type = "Analog";
                }
                break;
            default:
                break;
        }
        return type;
    }
    private void viewAll(String table){
        connect();
        switch(table){
            case "tbl_adminViewAllEquip":
                try{
                    String sql = "Select * from equipment_info";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_adminViewAllEquip.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    btn_editEquipInfo.setEnabled(false);
                    switch_Panel("adminViewAllEquip");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_adminRequest":
                try{
                    String sql = "Select student_ID from lend_queue group by student_ID";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_adminRequest.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    btn_adminViewStudentRequest.setEnabled(false);
                    switch_Panel("adminViewRequest");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_adminProcessRequest":
                try{
                    String sql = "Select equip_Code, equip_name, shelf_location from lend_queue where student_ID='"
                            + selected_student + "'";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_adminProcessRequest.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    switch_Panel("adminProcessRequest");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_history":
                try{
                    String sql = "Select * from lend_history";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_history.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    switch_Panel("adminHistory");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_studentQueue":
                try{
                    String sql = "Select equip_Code, equip_name from lend_queue";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_studentQueue.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    switch_Panel("studentView");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_adminViewStudentList":
                try{
                    String sql = "Select student_ID, queue_status, return_status from studentaccount";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_adminViewStudentList.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    btn_adminViewStudentDetails.setEnabled(false);
                    switch_Panel("adminViewStudentList");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_adminLoginHistory":
                try{
                    String sql = "Select admin_ID, login_date from admin_history";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_adminLoginHistory.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    switch_Panel("adminViewAdminHistory");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            case "tbl_studentLoginHistory":
                try{
                    String sql = "Select student_ID, login_date from student_history";
                    SQLStatement = con.prepareStatement(sql);
                    queryResultSet = SQLStatement.executeQuery(sql);
                    tbl_studentLoginHistory.setModel(DbUtils.resultSetToTableModel(queryResultSet));
                    switch_Panel("adminViewStudentHistory");
                }catch(SQLException | HeadlessException e){
                    say("Error:\n" + e);
                }
                break;
            default:
                break;
        }
    }
    private void login_history(String type, String student_ID){
        Calendar cal = Calendar.getInstance();
        connect();
        switch(type){
            case "admin":
                try{
                    String sql = "Insert into admin_history (admin_ID, login_date) values(?, ?)";
                    SQLStatement = con.prepareStatement(sql);
                    SQLStatement.setString(1, student_ID);
                    String date = cal.get(Calendar.HOUR_OF_DAY)+ ":"
                                        + cal.get(Calendar.MINUTE) + " - "
                                        + cal.get(Calendar.MONTH) + "/"
                                        + cal.get(Calendar.DATE) + "/"
                                        + cal.get(Calendar.YEAR);
                    SQLStatement.setString(2, date);
                    SQLStatement.execute();
                }catch(SQLException | HeadlessException e){
                    say("Error\n" + e);
                }
                break;
            case "student":
                try{
                    String sql = "Insert into student_history (student_ID, login_date) values(?, ?)";
                    SQLStatement = con.prepareStatement(sql);
                    SQLStatement.setString(1, student_ID);
                    String date = cal.get(Calendar.HOUR_OF_DAY)+ ":"
                                        + cal.get(Calendar.MINUTE) + " - "
                                        + cal.get(Calendar.MONTH) + "/"
                                        + cal.get(Calendar.DATE) + "/"
                                        + cal.get(Calendar.YEAR);
                    SQLStatement.setString(2, date);
                    SQLStatement.execute();
                }catch(SQLException | HeadlessException e){
                    say("Error\n" + e);
                }
                break;
            default:
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Equipments.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Equipments().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Login;
    private javax.swing.JPanel Login1;
    private javax.swing.JPanel Main;
    private javax.swing.JPanel adminAction;
    private javax.swing.JPanel adminAction1;
    private javax.swing.JPanel adminActionP2;
    private javax.swing.JPanel adminActionP21;
    private javax.swing.JPanel adminAddEquip;
    private javax.swing.JPanel adminAddEquip1;
    private javax.swing.JPanel adminEditEquip;
    private javax.swing.JPanel adminEditEquip1;
    private javax.swing.JPanel adminHistory;
    private javax.swing.JPanel adminHistory1;
    private javax.swing.JPanel adminLogin;
    private javax.swing.JPanel adminLogin1;
    private javax.swing.JPanel adminLoginHistory;
    private javax.swing.JPanel adminLoginHistory1;
    private javax.swing.JPanel adminProcessRequest;
    private javax.swing.JPanel adminProcessRequest1;
    private javax.swing.JPanel adminReturn;
    private javax.swing.JPanel adminReturn1;
    private javax.swing.JPanel adminStudentDetails;
    private javax.swing.JPanel adminStudentDetails1;
    private javax.swing.JPanel adminStudentDetails2;
    private javax.swing.JPanel adminStudentDetails21;
    private javax.swing.JPanel adminStudentDetails3;
    private javax.swing.JPanel adminStudentDetails31;
    private javax.swing.JPanel adminStudentStatus;
    private javax.swing.JPanel adminStudentStatus1;
    private javax.swing.JPanel adminViewAdminHistory;
    private javax.swing.JPanel adminViewAdminHistory1;
    private javax.swing.JPanel adminViewAllEquip;
    private javax.swing.JPanel adminViewAllEquip1;
    private javax.swing.JPanel adminViewRequest;
    private javax.swing.JPanel adminViewRequest1;
    private javax.swing.JPanel adminViewStudentHistory;
    private javax.swing.JPanel adminViewStudentHistory1;
    private javax.swing.JPanel adminViewStudentList;
    private javax.swing.JPanel adminViewStudentList1;
    private javax.swing.JButton btn_addEquipment;
    private javax.swing.JButton btn_adminActionP1;
    private javax.swing.JButton btn_adminActionP2;
    private javax.swing.JButton btn_adminAddEquipBack;
    private javax.swing.JButton btn_adminBack;
    private javax.swing.JButton btn_adminEditEquipBack;
    private javax.swing.JButton btn_adminHistory;
    private javax.swing.JButton btn_adminHistoryBack;
    private javax.swing.JButton btn_adminLogin;
    private javax.swing.JButton btn_adminLoginHistory;
    private javax.swing.JButton btn_adminLoginHistoryBack;
    private javax.swing.JButton btn_adminLogout;
    private javax.swing.JButton btn_adminLogoutP2;
    private javax.swing.JButton btn_adminProcessRequestBack;
    private javax.swing.JButton btn_adminReturn;
    private javax.swing.JButton btn_adminReturnBack;
    private javax.swing.JButton btn_adminStudentDetails2Back;
    private javax.swing.JButton btn_adminStudentDetails2Next;
    private javax.swing.JButton btn_adminStudentDetails2Previous;
    private javax.swing.JButton btn_adminStudentDetails3Back;
    private javax.swing.JButton btn_adminStudentDetails3Next;
    private javax.swing.JButton btn_adminStudentDetails3Previous;
    private javax.swing.JButton btn_adminStudentDetailsPrevious;
    private javax.swing.JButton btn_adminStudentStatusBack;
    private javax.swing.JButton btn_adminSwitchAccount;
    private javax.swing.JButton btn_adminSwitchAccountP2;
    private javax.swing.JButton btn_adminViewAdminHistoryBack;
    private javax.swing.JButton btn_adminViewAllEquip;
    private javax.swing.JButton btn_adminViewAllEquipBack;
    private javax.swing.JButton btn_adminViewAllStudent;
    private javax.swing.JButton btn_adminViewRequestBack;
    private javax.swing.JButton btn_adminViewStudentDetails;
    private javax.swing.JButton btn_adminViewStudentHistoryBack;
    private javax.swing.JButton btn_adminViewStudentListBack;
    private javax.swing.JButton btn_adminViewStudentRequest;
    private javax.swing.JButton btn_administrator;
    private javax.swing.JButton btn_approveRequest;
    private javax.swing.JButton btn_borrow;
    private javax.swing.JButton btn_borrowEquip;
    private javax.swing.JButton btn_editEquipInfo;
    private javax.swing.JButton btn_enterStudentID;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_insertEquipment;
    private javax.swing.JButton btn_rejectRequest;
    private javax.swing.JButton btn_requestCancel;
    private javax.swing.JButton btn_returnEquip;
    private javax.swing.JButton btn_student;
    private javax.swing.JButton btn_studentBack;
    private javax.swing.JButton btn_studentDetailsBack;
    private javax.swing.JButton btn_studentDetailsNext;
    private javax.swing.JButton btn_studentLendABack;
    private javax.swing.JButton btn_studentLoginHistory;
    private javax.swing.JButton btn_studentLogout;
    private javax.swing.JButton btn_studentSwitchAccount;
    private javax.swing.JButton btn_studentViewBack;
    private javax.swing.JButton btn_studentViewQueue;
    private javax.swing.JButton btn_updateEquipInfo;
    private javax.swing.JButton btn_updateStatus;
    private javax.swing.JButton btn_updateStudent3;
    private javax.swing.JButton btn_viewAdminInfo;
    private javax.swing.JButton btn_viewLoginHistory;
    private javax.swing.JButton btn_viewRequests;
    private javax.swing.JButton btn_viewStudentInfo;
    private javax.swing.JComboBox<String> cmb_mm;
    private javax.swing.JComboBox<String> cmb_queueStatus;
    private javax.swing.JComboBox<String> cmb_returnStatus;
    private javax.swing.JComboBox<String> cmb_sigGen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lbl_SID;
    private javax.swing.JLabel lbl_course;
    private javax.swing.JLabel lbl_firstN;
    private javax.swing.JLabel lbl_lastN;
    private javax.swing.JLabel lbl_middleN;
    private javax.swing.JLabel lbl_pin;
    private javax.swing.JLabel lbl_statQ;
    private javax.swing.JLabel lbl_statR;
    private javax.swing.JLabel lbl_statusID;
    private javax.swing.JLabel lbl_studentID;
    private javax.swing.JLabel lbl_yLVL;
    private javax.swing.JSpinner spn_clip;
    private javax.swing.JSpinner spn_mm;
    private javax.swing.JSpinner spn_osci;
    private javax.swing.JSpinner spn_psu;
    private javax.swing.JSpinner spn_sigGen;
    private javax.swing.JPanel studentAction;
    private javax.swing.JPanel studentAction1;
    private javax.swing.JPanel studentLendA;
    private javax.swing.JPanel studentLendA1;
    private javax.swing.JPanel studentLogin;
    private javax.swing.JPanel studentLogin1;
    private javax.swing.JPanel studentView;
    private javax.swing.JPanel studentView1;
    private javax.swing.JTable tbl_adminLoginHistory;
    private javax.swing.JTable tbl_adminProcessRequest;
    private javax.swing.JTable tbl_adminRequest;
    private javax.swing.JTable tbl_adminViewAllEquip;
    private javax.swing.JTable tbl_adminViewStudentList;
    private javax.swing.JTable tbl_history;
    private javax.swing.JTable tbl_studentLoginHistory;
    private javax.swing.JTable tbl_studentQueue;
    private javax.swing.JTextField txt_addCode;
    private javax.swing.JTextField txt_addManu;
    private javax.swing.JTextField txt_addName;
    private javax.swing.JTextField txt_addShelf;
    private javax.swing.JTextField txt_adminEditCode;
    private javax.swing.JTextField txt_adminEditManu;
    private javax.swing.JTextField txt_adminEditName;
    private javax.swing.JTextField txt_adminEditShelf;
    private javax.swing.JTextField txt_adminID;
    private javax.swing.JTextField txt_adminPass;
    private javax.swing.JTextField txt_queueIn;
    private javax.swing.JTextField txt_returnCode;
    private javax.swing.JTextField txt_returnIn;
    private javax.swing.JTextField txt_studentID;
    private javax.swing.JTextField txt_studentPass;
    // End of variables declaration//GEN-END:variables
}